{
  "version": 3,
  "sources": ["../src/app.jsx"],
  "sourcesContent": ["       \r\n        // Slider Component\r\n        const UniqueFeatureSlider = () => {\r\n            const [currentSlide, setCurrentSlide] = React.useState(0);\r\n        \r\n            const slides = [\r\n                {\r\n                    icon: \"fas fa-shield-halved\",\r\n                    color: \"orange\",\r\n                    title: \"18-Layer Military Security\",\r\n                    description: \"Revolutionary defense system with ECDH P-384 + AES-GCM 256 + ECDSA + Complete ASN.1 Validation. Enhanced Security Edition provides military-grade protection exceeding government standards with complete key structure verification.\"\r\n                },\r\n                {\r\n                    icon: \"fas fa-bolt\",\r\n                    color: \"yellow\",\r\n                    title: \"Lightning Network Payments\",\r\n                    description: \"First messenger with Lightning Network integration. Pay-per-session with satoshis via WebLN. Sustainable economic model without ads or data harvesting.\"\r\n                },\r\n                {\r\n                    icon: \"fas fa-network-wired\",\r\n                    color: \"purple\",\r\n                    title: \"Pure P2P WebRTC Architecture\",\r\n                    description: \"Direct peer-to-peer connections without any servers. Impossible to censor, block, or monitor. Complete decentralization with zero infrastructure.\"\r\n                },\r\n                {\r\n                    icon: \"fas fa-sync-alt\",\r\n                    color: \"green\",\r\n                    title: \"Perfect Forward Secrecy\",\r\n                    description: \"Automatic key rotation every 5 minutes or 100 messages. Non-extractable keys with hardware protection ensure past messages remain secure.\"\r\n                },\r\n                {\r\n                    icon: \"fas fa-user-secret\",\r\n                    color: \"cyan\",\r\n                    title: \"Advanced Traffic Obfuscation\",\r\n                    description: \"Fake traffic generation, packet padding, and pattern masking make communication indistinguishable from random noise. Defeats traffic analysis.\"\r\n                },\r\n                {\r\n                    icon: \"fas fa-eye-slash\",\r\n                    color: \"blue\",\r\n                    title: \"Zero Data Collection\",\r\n                    description: \"No registration, no servers, no logs. Messages exist only in browser memory. Complete anonymity with instant anonymous channels.\"\r\n                },\r\n                {\r\n                    icon: \"fas fa-code\",\r\n                    color: \"emerald\",\r\n                    title: \"100% Open Source Security\",\r\n                    description: \"All code is open for audit under MIT license. Uses only standard WebCrypto APIs. Cryptography runs directly in browser without server dependencies.\"\r\n                }\r\n            ];\r\n        \r\n            const nextSlide = () => setCurrentSlide((prev) => (prev + 1) % slides.length);\r\n            const prevSlide = () => setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);\r\n            const goToSlide = (index) => setCurrentSlide(index);\r\n        \r\n            React.useEffect(() => {\r\n                const timer = setInterval(() => {\r\n                    nextSlide();\r\n                }, 15000);\r\n                return () => clearInterval(timer);\r\n            }, []);\r\n        \r\n            return React.createElement('div', {\r\n                className: \"mt-12\"\r\n            }, [\r\n                React.createElement('div', {\r\n                    key: 'header',\r\n                    className: \"text-center mb-8\"\r\n                }, [\r\n                    React.createElement('h3', {\r\n                        key: 'title',\r\n                        className: \"text-2xl font-semibold text-primary mb-3\"\r\n                    }, 'Why SecureBit.chat is unique'),\r\n                    React.createElement('p', {\r\n                        key: 'subtitle',\r\n                        className: \"text-secondary max-w-2xl mx-auto\"\r\n                    }, 'The only messenger with military-grade cryptography and Lightning payments')\r\n                ]),\r\n        \r\n                React.createElement('div', {\r\n                    key: 'slider-container',\r\n                    className: \"relative max-w-4xl mx-auto\"\r\n                }, [\r\n                    React.createElement('div', {\r\n                        key: 'slider-wrapper',\r\n                        className: \"overflow-hidden rounded-xl\"\r\n                    }, [\r\n                        React.createElement('div', {\r\n                            key: 'slides',\r\n                            className: \"flex transition-transform duration-500 ease-in-out\",\r\n                            style: { transform: `translateX(-${currentSlide * 100}%)` }\r\n                        }, slides.map((slide, index) =>\r\n                            React.createElement('div', {\r\n                                key: index,\r\n                                className: \"w-full flex-shrink-0 px-4\"\r\n                            }, [\r\n                                React.createElement('div', {\r\n                                    key: 'slide-content',\r\n                                    className: \"card-minimal rounded-xl p-8 text-center min-h-[300px] flex flex-col justify-center relative overflow-hidden\"\r\n                                }, [\r\n                                    // Background icon\r\n                                    React.createElement('i', {\r\n                                        key: 'bg-icon',\r\n                                        className: `${slide.icon} absolute right-[-100px] top-1/2 -translate-y-1/2 opacity-10 text-[300px] pointer-events-none ${\r\n                                            slide.color === 'orange' ? 'text-orange-500' :\r\n                                            slide.color === 'yellow' ? 'text-yellow-500' :\r\n                                            slide.color === 'purple' ? 'text-purple-500' :\r\n                                            slide.color === 'green' ? 'text-green-500' :\r\n                                            slide.color === 'cyan' ? 'text-cyan-500' :\r\n                                            slide.color === 'blue' ? 'text-blue-500' :\r\n                                            'text-emerald-500'\r\n                                        }`\r\n                                    }),\r\n        \r\n                                    // Content\r\n                                    React.createElement('h4', {\r\n                                        key: 'slide-title',\r\n                                        className: \"text-xl font-semibold text-primary mb-4 relative z-10\"\r\n                                    }, slide.title),\r\n                                    React.createElement('p', {\r\n                                        key: 'slide-description',\r\n                                        className: \"text-secondary leading-relaxed max-w-2xl mx-auto relative z-10\"\r\n                                    }, slide.description)\r\n                                ])\r\n                            ])\r\n                        ))\r\n                    ]),\r\n        \r\n                    // Navigation\r\n                    React.createElement('button', {\r\n                        key: 'prev-btn',\r\n                        onClick: prevSlide,\r\n                        className: \"absolute left-2 top-1/2 transform -translate-y-1/2 w-10 h-10 bg-gray-600/80 hover:bg-gray-500/80 text-white rounded-full flex items-center justify-center transition-all duration-200 z-10\"\r\n                    }, [\r\n                        React.createElement('i', {\r\n                            key: 'prev-icon',\r\n                            className: \"fas fa-chevron-left\"\r\n                        })\r\n                    ]),\r\n                    React.createElement('button', {\r\n                        key: 'next-btn',\r\n                        onClick: nextSlide,\r\n                        className: \"absolute right-2 top-1/2 transform -translate-y-1/2 w-10 h-10 bg-gray-600/80 hover:bg-gray-500/80 text-white rounded-full flex items-center justify-center transition-all duration-200 z-10\"\r\n                    }, [\r\n                        React.createElement('i', {\r\n                            key: 'next-icon',\r\n                            className: \"fas fa-chevron-right\"\r\n                        })\r\n                    ])\r\n                ]),\r\n        \r\n                // Enhanced dots navigation (\u043E\u0441\u0442\u0430\u0432\u043B\u044F\u0435\u043C \u0443\u043B\u0443\u0447\u0448\u0435\u043D\u043D\u044B\u0435 \u0442\u043E\u0447\u043A\u0438)\r\n                React.createElement('div', {\r\n                    key: 'dots-container',\r\n                    className: \"flex justify-center space-x-3 mt-6\"\r\n                }, slides.map((slide, index) =>\r\n                    React.createElement('button', {\r\n                        key: index,\r\n                        onClick: () => goToSlide(index),\r\n                        className: `relative group transition-all duration-300 ${\r\n                            index === currentSlide\r\n                                ? 'w-12 h-4 bg-orange-500 rounded-full'\r\n                                : 'w-4 h-4 bg-gray-600 hover:bg-gray-500 rounded-full hover:scale-125'\r\n                        }`\r\n                    }, [\r\n                        // Tooltip on hover\r\n                        React.createElement('div', {\r\n                            key: 'tooltip',\r\n                            className: \"absolute -top-10 left-1/2 transform -translate-x-1/2 bg-gray-800 text-white text-xs px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 whitespace-nowrap pointer-events-none\"\r\n                        }, slide.title)\r\n                    ])\r\n                ))\r\n            ]);\r\n        };\r\n        \r\n        \r\n        \r\n                const ComparisonTable = () => {\r\n                const [selectedFeature, setSelectedFeature] = React.useState(null);\r\n        \r\n                const messengers = [\r\n                    {\r\n                    name: \"SecureBit.chat\",\r\n                    logo: <div className=\"w-8 h-8 bg-orange-500/10 border border-orange-500/20 rounded-lg flex items-center justify-center\">\r\n                            <i className=\"fas fa-shield-halved text-orange-400\" />\r\n                            </div>,\r\n                    type: \"P2P WebRTC\",\r\n                    version: \"Latest\",\r\n                    color: \"orange\",\r\n                    },\r\n                    {\r\n                    name: \"Signal\",\r\n                    logo: (\r\n                        <svg className=\"w-8 h-8\" viewBox=\"0 0 122.88 122.31\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path className=\"fill-blue-500\" d=\"M27.75,0H95.13a27.83,27.83,0,0,1,27.75,27.75V94.57a27.83,27.83,0,0,1-27.75,27.74H27.75A27.83,27.83,0,0,1,0,94.57V27.75A27.83,27.83,0,0,1,27.75,0Z\" />\r\n                        <path className=\"fill-white\" d=\"M61.44,25.39A35.76,35.76,0,0,0,31.18,80.18L27.74,94.86l14.67-3.44a35.77,35.77,0,1,0,19-66Z\" />\r\n                        </svg>\r\n                    ),\r\n                    type: \"Centralized\",\r\n                    version: \"Latest\",\r\n                    color: \"blue\",\r\n                    },\r\n                    {\r\n                    name: \"Threema\",\r\n                    logo: (\r\n                        <svg className=\"w-8 h-8\" viewBox=\"0 0 122.88 122.88\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <rect width=\"122.88\" height=\"122.88\" rx=\"18.43\" fill=\"#474747\" />\r\n                        <path fill=\"#FFFFFF\" d=\"M44.26,78.48l-19.44,4.8l4.08-16.56c-4.08-5.28-6.48-12-6.48-18.96c0-18.96,17.52-34.32,39.12-34.32c21.6,0,39.12,15.36,39.12,34.32c0,18.96-17.52,34.32-39.12,34.32c-6,0-12-1.2-17.04-3.36L44.26,78.48z M50.26,44.64h-0.48c-0.96,0-1.68,0.72-1.44,1.68v15.6c0,0.96,0.72,1.68,1.68,1.68l23.04,0c0.96,0,1.68-0.72,1.68-1.68v-15.6c0-0.96-0.72-1.68-1.68-1.68h-0.48v-4.32c0-6-5.04-11.04-11.04-11.04S50.5,34.32,50.5,40.32v4.32H50.26z M68.02,44.64h-13.2v-4.32c0-3.6,2.88-6.72,6.72-6.72c3.6,0,6.72,2.88,6.72,6.72v4.32H68.02z\" />\r\n                        <circle cx=\"37.44\" cy=\"97.44\" r=\"6.72\" fill=\"#3fe669\" />\r\n                        <circle cx=\"61.44\" cy=\"97.44\" r=\"6.72\" fill=\"#3fe669\" />\r\n                        <circle cx=\"85.44\" cy=\"97.44\" r=\"6.72\" fill=\"#3fe669\" />\r\n                        </svg>\r\n                    ),\r\n                    type: \"Centralized\",\r\n                    version: \"Latest\",\r\n                    color: \"green\",\r\n                    },\r\n                    {\r\n                    name: \"Session\",\r\n                    logo: (\r\n                        <svg className=\"w-8 h-8\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <rect width=\"1024\" height=\"1024\" fill=\"#333132\" />\r\n                        <path fill=\"#00f782\" d=\"M431 574.8c-.8-7.4-6.7-8.2-10.8-10.6-13.6-7.9-27.5-15.4-41.3-23l-22.5-12.3c-8.5-4.7-17.1-9.2-25.6-14.1-10.5-6-21-11.9-31.1-18.6-18.9-12.5-33.8-29.1-46.3-48.1-8.3-12.6-14.8-26.1-19.2-40.4-6.7-21.7-10.8-44.1-7.8-66.8 1.8-14 4.6-28 9.7-41.6 7.8-20.8 19.3-38.8 34.2-54.8 9.8-10.6 21.2-19.1 33.4-26.8 14.7-9.3 30.7-15.4 47.4-19 13.8-3 28.1-4.3 42.2-4.4 89.9-.4 179.7-.3 269.6 0 12.6 0 25.5 1 37.7 4.1 24.3 6.2 45.7 18.2 63 37 11.2 12.2 20.4 25.8 25.8 41.2 7.3 20.7 12.3 42.1 6.7 64.4-2.1 8.5-2.7 17.5-6.1 25.4-4.7 10.9-10.8 21.2-17.2 31.2-8.7 13.5-20.5 24.3-34.4 32.2-10.1 5.7-21 10.2-32 14.3-18.1 6.7-37.2 5-56.1 5.2-17.2.2-34.5 0-51.7.1-1.7 0-3.4 1.2-5.1 1.9 1.3 1.8 2.1 4.3 3.9 5.3 13.5 7.8 27.2 15.4 40.8 22.9 11 6 22.3 11.7 33.2 17.9 15.2 8.5 30.2 17.4 45.3 26.1 19.3 11.1 34.8 26.4 47.8 44.3 9.7 13.3 17.2 27.9 23 43.5 6.1 16.6 9.2 33.8 10.4 51.3.6 9.1-.7 18.5-1.9 27.6-1.2 9.1-2.7 18.4-5.6 27.1-3.3 10.2-7.4 20.2-12.4 29.6-8.4 15.7-19.6 29.4-32.8 41.4-12.7 11.5-26.8 20.6-42.4 27.6-22.9 10.3-46.9 14.4-71.6 14.5-89.7.3-179.4.2-269.1-.1-12.6 0-25.5-1-37.7-3.9-24.5-5.7-45.8-18-63.3-36.4-11.6-12.3-20.2-26.5-26.6-41.9-2.7-6.4-4.1-13.5-5.4-20.4-1.5-8.1-2.8-16.3-3.1-24.5-.6-15.7 2.8-30.9 8.2-45.4 8.2-22 21.7-40.6 40.2-55.2 10-7.9 21.3-13.7 33.1-18.8 16.6-7.2 34-8.1 51.4-8.5 21.9-.5 43.9-.1 65.9-.1 1.9-.1 3.9-.3 6.2-.4zm96.3-342.4c0 .1 0 .1 0 0-48.3.1-96.6-.6-144.9.5-13.5.3-27.4 3.9-40.1 8.7-14.9 5.6-28.1 14.6-39.9 25.8-20.2 19-32.2 42.2-37.2 68.9-3.6 19-1.4 38.1 4.1 56.5 4.1 13.7 10.5 26.4 18.5 38.4 14.8 22.2 35.7 36.7 58.4 49.2 11 6.1 22.2 11.9 33.2 18 13.5 7.5 26.9 15.1 40.4 22.6 13.1 7.3 26.2 14.5 39.2 21.7 9.7 5.3 19.4 10.7 29.1 16.1 2.9 1.6 4.1.2 4.5-2.4.3-2 .3-4 .3-6.1v-58.8c0-19.9.1-39.9 0-59.8 0-6.6 1.7-12.8 7.6-16.1 3.5-2 8.2-2.8 12.4-2.8 50.3-.2 100.7-.2 151-.1 19.8 0 38.3-4.4 55.1-15.1 23.1-14.8 36.3-36.3 40.6-62.9 3.4-20.8-1-40.9-12.4-58.5-17.8-27.5-43.6-43-76.5-43.6-47.8-.8-95.6-.2-143.4-.2zm-30.6 559.7c45.1 0 90.2-.2 135.3.1 18.9.1 36.6-3.9 53.9-11.1 18.4-7.7 33.6-19.8 46.3-34.9 9.1-10.8 16.2-22.9 20.8-36.5 4.2-12.4 7.4-24.7 7.3-37.9-.1-10.3.2-20.5-3.4-30.5-2.6-7.2-3.4-15.2-6.4-22.1-3.9-8.9-8.9-17.3-14-25.5-12.9-20.8-31.9-34.7-52.8-46.4-10.6-5.9-21.2-11.6-31.8-17.5-10.3-5.7-20.4-11.7-30.7-17.4-11.2-6.1-22.5-11.9-33.7-18-16.6-9.1-33.1-18.4-49.8-27.5-4.9-2.7-6.1-1.9-6.4 3.9-.1 2-.1 4.1-.1 6.1v114.5c0 14.8-5.6 20.4-20.4 20.4-47.6.1-95.3-.1-142.9.2-10.5.1-21.1 1.4-31.6 2.8-16.5 2.2-30.5 9.9-42.8 21-17 15.5-27 34.7-29.4 57.5-1.1 10.9-.4 21.7 2.9 32.5 3.7 12.3 9.2 23.4 17.5 33 19.2 22.1 43.4 33.3 72.7 33.3 46.6.1 93 0 139.5 0z\" />\r\n                        </svg>\r\n                    ),\r\n                    type: \"Onion Network\",\r\n                    version: \"Latest\",\r\n                    color: \"cyan\",\r\n                    },\r\n                ];\r\n        \r\n                const features = [\r\n                    {\r\n                    name: \"Security Architecture\",\r\n                    lockbit: { status: \"\uD83C\uDFC6\", detail: \"18-layer military-grade defense system with complete ASN.1 validation\" },\r\n                    signal: { status: \"\u2705\", detail: \"Signal Protocol with double ratchet\" },\r\n                    threema: { status: \"\u2705\", detail: \"Standard security implementation\" },\r\n                    session: { status: \"\u2705\", detail: \"Modified Signal Protocol + Onion routing\" },\r\n                    },\r\n                    {\r\n                    name: \"Cryptography\",\r\n                    lockbit: { status: \"\uD83C\uDFC6\", detail: \"ECDH P-384 + AES-GCM 256 + ECDSA P-384\" },\r\n                    signal: { status: \"\u2705\", detail: \"Signal Protocol + Double Ratchet\" },\r\n                    threema: { status: \"\u2705\", detail: \"NaCl + XSalsa20 + Poly1305\" },\r\n                    session: { status: \"\u2705\", detail: \"Modified Signal Protocol\" },\r\n                    },\r\n                    {\r\n                    name: \"Perfect Forward Secrecy\",\r\n                    lockbit: { status: \"\uD83C\uDFC6\", detail: \"Auto rotation every 5 minutes or 100 messages\" },\r\n                    signal: { status: \"\u2705\", detail: \"Double Ratchet algorithm\" },\r\n                    threema: { status: \"\u26A0\uFE0F\", detail: \"Partial (group chats)\" },\r\n                    session: { status: \"\u2705\", detail: \"Session Ratchet algorithm\" },\r\n                    },\r\n                    {\r\n                    name: \"Architecture\",\r\n                    lockbit: { status: \"\uD83C\uDFC6\", detail: \"Pure P2P WebRTC without servers\" },\r\n                    signal: { status: \"\u274C\", detail: \"Centralized Signal servers\" },\r\n                    threema: { status: \"\u274C\", detail: \"Threema servers in Switzerland\" },\r\n                    session: { status: \"\u26A0\uFE0F\", detail: \"Onion routing via network nodes\" },\r\n                    },\r\n                    {\r\n                    name: \"Registration Anonymity\",\r\n                    lockbit: { status: \"\uD83C\uDFC6\", detail: \"No registration required, instant anonymous channels\" },\r\n                    signal: { status: \"\u274C\", detail: \"Phone number required\" },\r\n                    threema: { status: \"\u2705\", detail: \"ID generated locally\" },\r\n                    session: { status: \"\u2705\", detail: \"Random session ID\" },\r\n                    },\r\n                    {\r\n                    name: \"Payment Integration\",\r\n                    lockbit: { status: \"\uD83C\uDFC6\", detail: \"Lightning Network satoshis per session + WebLN\" },\r\n                    signal: { status: \"\u274C\", detail: \"No payment system\" },\r\n                    threema: { status: \"\u274C\", detail: \"No payment system\" },\r\n                    session: { status: \"\u274C\", detail: \"No payment system\" },\r\n                    },\r\n                    {\r\n                    name: \"Metadata Protection\",\r\n                    lockbit: { status: \"\uD83C\uDFC6\", detail: \"Full metadata encryption + traffic obfuscation\" },\r\n                    signal: { status: \"\u26A0\uFE0F\", detail: \"Sealed Sender (partial)\" },\r\n                    threema: { status: \"\u26A0\uFE0F\", detail: \"Minimal metadata\" },\r\n                    session: { status: \"\u2705\", detail: \"Onion routing hides metadata\" },\r\n                    },\r\n                    {\r\n                    name: \"Traffic Obfuscation\",\r\n                    lockbit: { status: \"\uD83C\uDFC6\", detail: \"Fake traffic + pattern masking + packet padding\" },\r\n                    signal: { status: \"\u274C\", detail: \"No traffic obfuscation\" },\r\n                    threema: { status: \"\u274C\", detail: \"No traffic obfuscation\" },\r\n                    session: { status: \"\u2705\", detail: \"Onion routing provides obfuscation\" },\r\n                    },\r\n                    {\r\n                    name: \"Open Source\",\r\n                    lockbit: { status: \"\uD83C\uDFC6\", detail: \"100% open + auditable + MIT license\" },\r\n                    signal: { status: \"\u2705\", detail: \"Fully open\" },\r\n                    threema: { status: \"\u26A0\uFE0F\", detail: \"Only clients open\" },\r\n                    session: { status: \"\u2705\", detail: \"Fully open\" },\r\n                    },\r\n                    {\r\n                    name: \"MITM Protection\",\r\n                    lockbit: { status: \"\uD83C\uDFC6\", detail: \"Out-of-band verification + mutual auth + ECDSA\" },\r\n                    signal: { status: \"\u2705\", detail: \"Safety numbers verification\" },\r\n                    threema: { status: \"\u2705\", detail: \"QR code scanning\" },\r\n                    session: { status: \"\u26A0\uFE0F\", detail: \"Basic key verification\" },\r\n                    },\r\n                    {\r\n                    name: \"Economic Model\",\r\n                    lockbit: { status: \"\uD83C\uDFC6\", detail: \"Sustainable pay-per-session model\" },\r\n                    signal: { status: \"\u26A0\uFE0F\", detail: \"Donations and grants dependency\" },\r\n                    threema: { status: \"\u2705\", detail: \"One-time app purchase\" },\r\n                    session: { status: \"\u26A0\uFE0F\", detail: \"Donations dependency\" },\r\n                    },\r\n                    {\r\n                    name: \"Censorship Resistance\",\r\n                    lockbit: { status: \"\uD83C\uDFC6\", detail: \"Impossible to block P2P + no servers to target\" },\r\n                    signal: { status: \"\u26A0\uFE0F\", detail: \"Blocked in authoritarian countries\" },\r\n                    threema: { status: \"\u26A0\uFE0F\", detail: \"May be blocked\" },\r\n                    session: { status: \"\u2705\", detail: \"Onion routing bypasses blocks\" },\r\n                    },\r\n                    {\r\n                    name: \"Data Storage\",\r\n                    lockbit: { status: \"\uD83C\uDFC6\", detail: \"Zero data storage - only in browser memory\" },\r\n                    signal: { status: \"\u26A0\uFE0F\", detail: \"Local database storage\" },\r\n                    threema: { status: \"\u26A0\uFE0F\", detail: \"Local + optional backup\" },\r\n                    session: { status: \"\u26A0\uFE0F\", detail: \"Local database storage\" },\r\n                    },\r\n                    {\r\n                    name: \"Key Security\",\r\n                    lockbit: { status: \"\uD83C\uDFC6\", detail: \"Non-extractable keys + hardware protection\" },\r\n                    signal: { status: \"\u2705\", detail: \"Secure key storage\" },\r\n                    threema: { status: \"\u2705\", detail: \"Local key storage\" },\r\n                    session: { status: \"\u2705\", detail: \"Secure key storage\" },\r\n                    },\r\n                    {\r\n                    name: \"Post-Quantum Roadmap\",\r\n                    lockbit: { status: \"\u2705\", detail: \"Planned v5.0 - CRYSTALS-Kyber/Dilithium\" },\r\n                    signal: { status: \"\u26A0\uFE0F\", detail: \"PQXDH in development\" },\r\n                    threema: { status: \"\u274C\", detail: \"Not announced\" },\r\n                    session: { status: \"\u274C\", detail: \"Not announced\" },\r\n                    },\r\n                ];\r\n        \r\n                const getStatusIcon = (status) => {\r\n                    const statusMap = {\r\n                    \"\uD83C\uDFC6\": { icon: \"\uD83C\uDFC6\", color: \"text-yellow-400\" },\r\n                    \"\u2705\": { icon: \"\u2705\", color: \"text-green-400\" },\r\n                    \"\u26A0\uFE0F\": { icon: \"\u26A0\uFE0F\", color: \"text-yellow-400\" },\r\n                    \"\u274C\": { icon: \"\u274C\", color: \"text-red-400\" },\r\n                    };\r\n                    return statusMap[status] || { icon: status, color: \"text-gray-400\" };\r\n                };\r\n        \r\n                const toggleFeatureDetail = (index) => {\r\n                    setSelectedFeature(selectedFeature === index ? null : index);\r\n                };\r\n        \r\n                return (\r\n                    <div className=\"mt-16\">\r\n                    {/* Title */}\r\n                    <div className=\"text-center mb-8\">\r\n                        <h3 className=\"text-3xl font-bold text-primary mb-3\">\r\n                        Enhanced Security Edition Comparison\r\n                        </h3>\r\n                        <p className=\"text-secondary max-w-2xl mx-auto mb-4\">\r\n                        Enhanced Security Edition vs leading secure messengers\r\n                        </p>\r\n                        <div className=\"inline-flex items-center px-4 py-2 bg-yellow-500/10 border border-yellow-500/20 rounded-lg\">\r\n                        <span className=\"text-yellow-400 mr-2\">\uD83C\uDFC6</span>\r\n                        <span className=\"text-yellow-300 text-sm font-medium\">\r\n                            Category Leader - Military-Grade Security\r\n                        </span>\r\n                        </div>\r\n                    </div>\r\n        \r\n                    {/* Table container */}\r\n                    <div className=\"max-w-7xl mx-auto\">\r\n                        {/* Mobile Alert */}\r\n                        <div className=\"md:hidden p-4 bg-yellow-500/10 border border-yellow-500/20 rounded-lg mb-4\">\r\n                        <p className=\"text-yellow-400 text-sm text-center\">\r\n                            \uD83D\uDCA1 Rotate your device horizontally for better viewing\r\n                        </p>\r\n                        </div>\r\n        \r\n                        {/* Table */}\r\n                        <div className=\"overflow-x-auto custom-scrollbar\">\r\n                        <table\r\n                            className=\"w-full border-collapse rounded-xl overflow-hidden shadow-2xl\"\r\n                            style={{ backgroundColor: \"rgba(42, 43, 42, 0.9)\" }}\r\n                        >\r\n                            {/* Table Header */}\r\n                            <thead>\r\n                            <tr className=\"bg-my\">\r\n                                <th className=\"text-left p-4 border-b border-gray-600 text-primary font-bold min-w-[240px]\">\r\n                                Security Criterion\r\n                                </th>\r\n                                {messengers.map((messenger, index) => (\r\n                                <th key={`messenger-${index}`} className=\"text-center p-4 border-b border-gray-600 min-w-[160px]\">\r\n                                    <div className=\"flex flex-col items-center\">\r\n                                    <div className=\"mb-2\">{messenger.logo}</div>\r\n                                    <div className={`text-sm font-bold ${\r\n                                        messenger.color === 'orange' ? 'text-orange-400' :\r\n                                        messenger.color === 'blue' ? 'text-blue-400' :\r\n                                        messenger.color === 'green' ? 'text-green-400' :\r\n                                        'text-cyan-400'\r\n                                    }`}>\r\n                                        {messenger.name}\r\n                                    </div>\r\n                                    <div className=\"text-xs text-gray-400\">{messenger.type}</div>\r\n                                    <div className=\"text-xs text-gray-500 mt-1\">{messenger.version}</div>\r\n                                    </div>\r\n                                </th>\r\n                                ))}\r\n                            </tr>\r\n                            </thead>\r\n        \r\n                            {/* Table body*/}\r\n                            <tbody>\r\n                            {features.map((feature, featureIndex) => (\r\n                                <React.Fragment key={`feature-${featureIndex}`}>\r\n                                <tr\r\n                                    className={`border-b border-gray-700/30 hover:bg-gray-800/30 transition-all duration-200 cursor-pointer ${\r\n                                    selectedFeature === featureIndex ? 'bg-gray-800/50' : ''\r\n                                    }`}\r\n                                    onClick={() => toggleFeatureDetail(featureIndex)}\r\n                                >\r\n                                    <td className=\"p-4 text-primary font-semibold\">\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <span>{feature.name}</span>\r\n                                        <i className={`fas fa-chevron-${selectedFeature === featureIndex ? 'up' : 'down'} text-xs text-gray-400 opacity-60 transition-all duration-200`} />\r\n                                    </div>\r\n                                    </td>\r\n                                    <td className=\"p-4 text-center\">\r\n                                    <span className={`${getStatusIcon(feature.lockbit.status).color} text-2xl`}>\r\n                                        {getStatusIcon(feature.lockbit.status).icon}\r\n                                    </span>\r\n                                    </td>\r\n                                    <td className=\"p-4 text-center\">\r\n                                    <span className={`${getStatusIcon(feature.signal.status).color} text-2xl`}>\r\n                                        {getStatusIcon(feature.signal.status).icon}\r\n                                    </span>\r\n                                    </td>\r\n                                    <td className=\"p-4 text-center\">\r\n                                    <span className={`${getStatusIcon(feature.threema.status).color} text-2xl`}>\r\n                                        {getStatusIcon(feature.threema.status).icon}\r\n                                    </span>\r\n                                    </td>\r\n                                    <td className=\"p-4 text-center\">\r\n                                    <span className={`${getStatusIcon(feature.session.status).color} text-2xl`}>\r\n                                        {getStatusIcon(feature.session.status).icon}\r\n                                    </span>\r\n                                    </td>\r\n                                </tr>\r\n        \r\n                                {/* Details */}\r\n                                {selectedFeature === featureIndex && (\r\n                                    <tr className=\"border-b border-gray-700/30 bg-gradient-to-r from-gray-800/20 to-gray-900/20\">\r\n                                    <td className=\"p-4 text-xs text-gray-400 font-medium\">Technical Details:</td>\r\n                                    <td className=\"p-4 text-center\">\r\n                                        <div className=\"text-xs text-orange-300 font-medium leading-relaxed max-w-32\">\r\n                                        {feature.lockbit.detail}\r\n                                        </div>\r\n                                    </td>\r\n                                    <td className=\"p-4 text-center\">\r\n                                        <div className=\"text-xs text-blue-300 leading-relaxed max-w-32\">\r\n                                        {feature.signal.detail}\r\n                                        </div>\r\n                                    </td>\r\n                                    <td className=\"p-4 text-center\">\r\n                                        <div className=\"text-xs text-green-300 leading-relaxed max-w-32\">\r\n                                        {feature.threema.detail}\r\n                                        </div>\r\n                                    </td>\r\n                                    <td className=\"p-4 text-center\">\r\n                                        <div className=\"text-xs text-cyan-300 leading-relaxed max-w-32\">\r\n                                        {feature.session.detail}\r\n                                        </div>\r\n                                    </td>\r\n                                    </tr>\r\n                                )}\r\n                                </React.Fragment>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n        \r\n                        {/* Legend */}\r\n                        <div className=\"mt-8 grid grid-cols-2 md:grid-cols-4 gap-4 max-w-5xl mx-auto\">\r\n                        <div className=\"flex items-center justify-center p-4 bg-yellow-500/10 border border-yellow-500/20 rounded-xl hover:bg-yellow-500/20 transition-colors\">\r\n                            <span className=\"text-yellow-400 mr-2 text-xl\">\uD83C\uDFC6</span>\r\n                            <span className=\"text-yellow-300 text-sm font-bold\">Category Leader</span>\r\n                        </div>\r\n                        <div className=\"flex items-center justify-center p-4 bg-green-500/10 border border-green-500/20 rounded-xl hover:bg-green-500/20 transition-colors\">\r\n                            <span className=\"text-green-400 mr-2 text-xl\">\u2705</span>\r\n                            <span className=\"text-green-300 text-sm font-bold\">Excellent</span>\r\n                        </div>\r\n                        <div className=\"flex items-center justify-center p-4 bg-yellow-500/10 border border-yellow-500/20 rounded-xl hover:bg-yellow-500/20 transition-colors\">\r\n                            <span className=\"text-yellow-400 mr-2 text-xl\">\u26A0\uFE0F</span>\r\n                            <span className=\"text-yellow-300 text-sm font-bold\">Partial/Limited</span>\r\n                        </div>\r\n                        <div className=\"flex items-center justify-center p-4 bg-red-500/10 border border-red-500/20 rounded-xl hover:bg-red-500/20 transition-colors\">\r\n                            <span className=\"text-red-400 mr-2 text-xl\">\u274C</span>\r\n                            <span className=\"text-red-300 text-sm font-bold\">Not Available</span>\r\n                        </div>\r\n                        </div>\r\n        \r\n                        {/* Legend */}\r\n                        <div className=\"mt-10 space-y-6 max-w-6xl mx-auto\">\r\n                        <div className=\"p-6 bg-gradient-to-r from-orange-500/10 to-yellow-500/10 border border-orange-500/20 rounded-xl\">\r\n                            <h4 className=\"text-xl font-bold text-orange-400 mb-4 flex items-center\">\r\n                            <i className=\"fas fa-trophy mr-3\" />\r\n                            SecureBit.chat Enhanced Security Edition Summary\r\n                            </h4>\r\n                            <p className=\"text-secondary leading-relaxed text-lg mb-4\">\r\n                            SecureBit.chat dominates in 11 out of 15 security categories, establishing itself as the most secure P2P messenger available.\r\n                            The Enhanced Security Edition introduces revolutionary 18-layer defense architecture with complete ASN.1 validation, Lightning Network integration, and military-grade cryptography that exceeds government and enterprise standards.\r\n                            </p>\r\n                            <div className=\"grid md:grid-cols-2 gap-4 mt-6\">\r\n                            <div className=\"p-4 bg-orange-500/5 border border-orange-500/10 rounded-lg\">\r\n                                <h5 className=\"text-orange-400 font-semibold mb-2\">\uD83D\uDD10 Cryptographic Superiority</h5>\r\n                                <p className=\"text-sm text-gray-300\">\r\n                                ECDH P-384 + AES-GCM 256 + ECDSA P-384 + Complete ASN.1 Validation with non-extractable keys and 18-layer defense system\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"p-4 bg-orange-500/5 border border-orange-500/10 rounded-lg\">\r\n                                <h5 className=\"text-orange-400 font-semibold mb-2\">\u26A1 Lightning Integration</h5>\r\n                                <p className=\"text-sm text-gray-300\">\r\n                                First messenger with Lightning Network payments - sustainable economic model with instant satoshi transactions\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"p-4 bg-orange-500/5 border border-orange-500/10 rounded-lg\">\r\n                                <h5 className=\"text-orange-400 font-semibold mb-2\">\uD83C\uDF10 True P2P Architecture</h5>\r\n                                <p className=\"text-sm text-gray-300\">\r\n                                Pure WebRTC connections with zero servers, impossible to censor or shutdown, complete anonymity\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"p-4 bg-orange-500/5 border border-orange-500/10 rounded-lg\">\r\n                                <h5 className=\"text-orange-400 font-semibold mb-2\">\uD83C\uDFAD Traffic Obfuscation</h5>\r\n                                <p className=\"text-sm text-gray-300\">\r\n                                Advanced fake traffic generation, packet padding, and pattern masking defeat traffic analysis\r\n                                </p>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n        \r\n                        {/* Version information */}\r\n                        <div className=\"mt-8 text-center\">\r\n                        <div className=\"inline-flex items-center px-6 py-3 bg-gray-800/50 border border-gray-600/30 rounded-xl\">\r\n                            <span className=\"text-orange-400 mr-2\">\uD83D\uDE80</span>\r\n                                                    <span className=\"text-gray-300 text-sm\">Enhanced Security Edition v4.02.985 - ECDH + DTLS + SAS - </span>\r\n                            <span className=\"text-orange-400 font-semibold text-sm\">Active Production Release</span>\r\n                            <span className=\"text-gray-400 text-sm ml-2\"> | Next: v5.0 Post-Quantum</span>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                );\r\n                };\r\n        \r\n                function Roadmap() {\r\n                  const [selectedPhase, setSelectedPhase] = React.useState(null);\r\n                  const phases = [\r\n                    {\r\n                        version: \"v1.0\",\r\n                        title: \"Start of Development\",\r\n                        status: \"done\",\r\n                        date: \"Early 2025\",\r\n                        description: \"Idea, prototype, and infrastructure setup\",\r\n                        features: [\r\n                        \"Concept and requirements formation\",\r\n                        \"Stack selection: WebRTC, P2P, cryptography\",\r\n                        \"First messaging prototypes\",\r\n                        \"Repository creation and CI\",\r\n                        \"Basic encryption architecture\",\r\n                        \"UX/UI design\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        version: \"v1.5\",\r\n                        title: \"Alpha Release\",\r\n                        status: \"done\",\r\n                        date: \"Spring 2025\",\r\n                        description: \"First public alpha: basic chat and key exchange\",\r\n                        features: [\r\n                        \"Basic P2P messaging via WebRTC\",\r\n                        \"Simple E2E encryption (demo scheme)\",\r\n                        \"Stable signaling and reconnection\",\r\n                        \"Minimal UX for testing\",\r\n                        \"Feedback collection from early testers\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        version: \"v2.0\",\r\n                        title: \"Security Hardened\",\r\n                        status: \"done\",\r\n                        date: \"Summer 2025\",\r\n                        description: \"Security strengthening and stable branch release\",\r\n                        features: [\r\n                        \"ECDH/ECDSA implementation in production\",\r\n                        \"Perfect Forward Secrecy and key rotation\",\r\n                        \"Improved authentication checks\",\r\n                        \"File encryption and large payload transfers\",\r\n                        \"Audit of basic cryptoprocesses\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        version: \"v3.0\",\r\n                        title: \"Scaling & Stability\",\r\n                        status: \"done\",\r\n                        date: \"Fall 2025\",\r\n                        description: \"Network scaling and stability improvements\",\r\n                        features: [\r\n                        \"Optimization of P2P connections and NAT traversal\",\r\n                        \"Reconnection mechanisms and message queues\",\r\n                        \"Reduced battery consumption on mobile\",\r\n                        \"Support for multi-device synchronization\",\r\n                        \"Monitoring and logging tools for developers\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        version: \"v3.5\",\r\n                        title: \"Privacy-first Release\",\r\n                        status: \"done\",\r\n                        date: \"Winter 2025\",\r\n                        description: \"Focus on privacy: minimizing metadata\",\r\n                        features: [\r\n                        \"Metadata protection and fingerprint reduction\",\r\n                        \"Experiments with onion routing and DHT\",\r\n                        \"Options for anonymous connections\",\r\n                        \"Preparation for open code audit\",\r\n                        \"Improved user verification processes\"\r\n                        ]\r\n                    },\r\n        \r\n                    // current and future phases\r\n                    {\r\n                                          version: \"v4.02.985\",\r\n                        title: \"Enhanced Security Edition\",\r\n                        status: \"current\",\r\n                        date: \"Now\",\r\n                        description: \"Current version with ECDH + DTLS + SAS security, 18-layer military-grade cryptography and complete ASN.1 validation\",\r\n                        features: [\r\n                        \"ECDH + DTLS + SAS triple-layer security\",\r\n                        \"ECDH P-384 + AES-GCM 256-bit encryption\",\r\n                        \"DTLS fingerprint verification\",\r\n                        \"SAS (Short Authentication String) verification\",\r\n                        \"Perfect Forward Secrecy with key rotation\",\r\n                        \"Enhanced MITM attack prevention\",\r\n                        \"Complete ASN.1 DER validation\",\r\n                        \"OID and EC point verification\",\r\n                        \"SPKI structure validation\",\r\n                        \"Lightning Network payments\",\r\n                        \"P2P WebRTC architecture\",\r\n                        \"Metadata protection\",\r\n                        \"100% open source code\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        version: \"v4.5\",\r\n                        title: \"Mobile & Desktop Edition\",\r\n                        status: \"development\",\r\n                        date: \"Q2 2025\",\r\n                        description: \"Native apps for all platforms\",\r\n                        features: [\r\n                        \"PWA app for mobile\",\r\n                        \"Electron app for desktop\",\r\n                        \"Real-time notifications\",\r\n                        \"Automatic reconnection\",\r\n                        \"Battery optimization\",\r\n                        \"Cross-device synchronization\",\r\n                        \"Improved UX/UI\",\r\n                        \"Support for files up to 100MB\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        version: \"v5.0\",\r\n                        title: \"Quantum-Resistant Edition\",\r\n                        status: \"planned\",\r\n                        date: \"Q4 2025\",\r\n                        description: \"Protection against quantum computers\",\r\n                        features: [\r\n                        \"Post-quantum cryptography CRYSTALS-Kyber\",\r\n                        \"SPHINCS+ digital signatures\",\r\n                        \"Hybrid scheme: classic + PQ\",\r\n                        \"Quantum-safe key exchange\",\r\n                        \"Updated hashing algorithms\",\r\n                        \"Migration of existing sessions\",\r\n                        \"Compatibility with v4.x\",\r\n                        \"Quantum-resistant protocols\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        version: \"v5.5\",\r\n                        title: \"Group Communications\",\r\n                        status: \"planned\",\r\n                        date: \"Q2 2026\",\r\n                        description: \"Group chats with preserved privacy\",\r\n                        features: [\r\n                        \"P2P group connections up to 8 participants\",\r\n                        \"Mesh networking for groups\",\r\n                        \"Signal Double Ratchet for groups\",\r\n                        \"Anonymous groups without metadata\",\r\n                        \"Ephemeral groups (disappear after session)\",\r\n                        \"Group Lightning payments\",\r\n                        \"Cryptographic group administration\",\r\n                        \"Group member auditing\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        version: \"v6.0\",\r\n                        title: \"Decentralized Network\",\r\n                        status: \"research\",\r\n                        date: \"2027\",\r\n                        description: \"Fully decentralized network\",\r\n                        features: [\r\n                        \"LockBit node mesh network\",\r\n                        \"DHT for peer discovery\",\r\n                        \"Built-in onion routing\",\r\n                        \"Tokenomics and node incentives\",\r\n                        \"Governance via DAO\",\r\n                        \"Interoperability with other networks\",\r\n                        \"Cross-platform compatibility\",\r\n                        \"Self-healing network\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        version: \"v7.0\",\r\n                        title: \"AI Privacy Assistant\",\r\n                        status: \"research\",\r\n                        date: \"2028+\",\r\n                        description: \"AI for privacy and security\",\r\n                        features: [\r\n                        \"Local AI threat analysis\",\r\n                        \"Automatic MITM detection\",\r\n                        \"Adaptive cryptography\",\r\n                        \"Personalized security recommendations\",\r\n                        \"Zero-knowledge machine learning\",\r\n                        \"Private AI assistant\",\r\n                        \"Predictive security\",\r\n                        \"Autonomous attack protection\"\r\n                        ]\r\n                    }\r\n                    ];\r\n        \r\n                \r\n                  const getStatusConfig = (status) => {\r\n                    switch (status) {\r\n                        case 'current':\r\n                        return {\r\n                            color: 'green',\r\n                            bgClass: 'bg-green-500/10 border-green-500/20',\r\n                            textClass: 'text-green-400',\r\n                            icon: 'fas fa-check-circle',\r\n                            label: 'Current Version'\r\n                        };\r\n                        case 'development':\r\n                        return {\r\n                            color: 'orange',\r\n                            bgClass: 'bg-orange-500/10 border-orange-500/20',\r\n                            textClass: 'text-orange-400',\r\n                            icon: 'fas fa-code',\r\n                            label: 'In Development'\r\n                        };\r\n                        case 'planned':\r\n                        return {\r\n                            color: 'blue',\r\n                            bgClass: 'bg-blue-500/10 border-blue-500/20',\r\n                            textClass: 'text-blue-400',\r\n                            icon: 'fas fa-calendar-alt',\r\n                            label: 'Planned'\r\n                        };\r\n                        case 'research':\r\n                        return {\r\n                            color: 'purple',\r\n                            bgClass: 'bg-purple-500/10 border-purple-500/20',\r\n                            textClass: 'text-purple-400',\r\n                            icon: 'fas fa-flask',\r\n                            label: 'Research'\r\n                        };\r\n                        case 'done':\r\n                        return {\r\n                            color: 'gray',\r\n                            bgClass: 'bg-gray-500/10 border-gray-500/20',\r\n                            textClass: 'text-gray-300',\r\n                            icon: 'fas fa-flag-checkered',\r\n                            label: 'Released'\r\n                        };\r\n                        default:\r\n                        return {\r\n                            color: 'gray',\r\n                            bgClass: 'bg-gray-500/10 border-gray-500/20',\r\n                            textClass: 'text-gray-400',\r\n                            icon: 'fas fa-question',\r\n                            label: 'Unknown'\r\n                        };\r\n                    }\r\n                    };\r\n        \r\n                \r\n                  const togglePhaseDetail = (index) => {\r\n                    setSelectedPhase(selectedPhase === index ? null : index);\r\n                  };\r\n                return (\r\n                    <div key=\"roadmap-section\" className=\"mt-16 px-4 sm:px-0\">\r\n                      <div key=\"section-header\" className=\"text-center mb-12\">\r\n                        <h3 key=\"title\" className=\"text-2xl font-semibold text-primary mb-3\">\r\n                          Development Roadmap\r\n                        </h3>\r\n                        <p key=\"subtitle\" className=\"text-secondary max-w-2xl mx-auto mb-6\">\r\n                          Evolution of SecureBit.chat : from initial development to quantum-resistant decentralized network with complete ASN.1 validation\r\n                        </p>\r\n                        <div\r\n                          key=\"roadmap-note\"\r\n                          className=\"inline-flex items-center px-4 py-2 bg-blue-500/10 border border-blue-500/20 rounded-lg\"\r\n                        >\r\n                          <i key=\"icon\" className=\"fas fa-rocket text-blue-400 mr-2\" />\r\n                          <span key=\"text\" className=\"text-blue-300 text-sm font-medium\">\r\n                            Click on a version for details\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                \r\n                      <div key=\"roadmap-container\" className=\"max-w-6xl mx-auto\">\r\n                        <div key=\"timeline\" className=\"relative\">\r\n                          {/* The line has been removed */}\r\n                \r\n                          <div key=\"phases\" className=\"space-y-8\">\r\n                            {phases.map((phase, index) => {\r\n                              const statusConfig = getStatusConfig(phase.status);\r\n                              const isExpanded = selectedPhase === index;\r\n                \r\n                              return (\r\n                                <div key={`phase-${index}`} className=\"relative\">\r\n                                  {/* The dots are visible only on sm and larger screens */}\r\n                \r\n                                  <button\r\n                                    type=\"button\"\r\n                                    aria-expanded={isExpanded}\r\n                                    onClick={() => togglePhaseDetail(index)}\r\n                                    key={`phase-button-${index}`}\r\n                                    className={`card-minimal rounded-xl p-4 text-left w-full transition-all duration-300 ${\r\n                                      isExpanded\r\n                                        ? \"ring-2 ring-\" + statusConfig.color + \"-500/30\"\r\n                                        : \"\"\r\n                                    }`}\r\n                                  >\r\n                                    <div\r\n                                      key=\"phase-header\"\r\n                                      className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4 space-y-2 sm:space-y-0\"\r\n                                    >\r\n                                      <div\r\n                                        key=\"phase-info\"\r\n                                        className=\"flex flex-col sm:flex-row sm:items-center sm:space-x-4\"\r\n                                      >\r\n                                        <div\r\n                                          key=\"version-badge\"\r\n                                          className={`px-3 py-1 ${statusConfig.bgClass} border rounded-lg mb-2 sm:mb-0`}\r\n                                        >\r\n                                          <span\r\n                                            key=\"version\"\r\n                                            className={`${statusConfig.textClass} font-bold text-sm`}\r\n                                          >\r\n                                            {phase.version}\r\n                                          </span>\r\n                                        </div>\r\n                \r\n                                        <div key=\"title-section\">\r\n                                          <h4\r\n                                            key=\"title\"\r\n                                            className=\"text-lg font-semibold text-primary\"\r\n                                          >\r\n                                            {phase.title}\r\n                                          </h4>\r\n                                          <p\r\n                                            key=\"description\"\r\n                                            className=\"text-secondary text-sm\"\r\n                                          >\r\n                                            {phase.description}\r\n                                          </p>\r\n                                        </div>\r\n                                      </div>\r\n                \r\n                                      <div\r\n                                        key=\"phase-meta\"\r\n                                        className=\"flex items-center space-x-3 text-sm text-gray-400 font-medium\"\r\n                                      >\r\n                                        <div\r\n                                          key=\"status-badge\"\r\n                                          className={`flex items-center px-3 py-1 ${statusConfig.bgClass} border rounded-lg`}\r\n                                        >\r\n                                          <i\r\n                                            key=\"status-icon\"\r\n                                            className={`${statusConfig.icon} ${statusConfig.textClass} mr-2 text-xs`}\r\n                                          />\r\n                                          <span\r\n                                            key=\"status-text\"\r\n                                            className={`${statusConfig.textClass} text-xs font-medium`}\r\n                                          >\r\n                                            {statusConfig.label}\r\n                                          </span>\r\n                                        </div>\r\n                \r\n                                        <div key=\"date\">{phase.date}</div>\r\n                                        <i\r\n                                          key=\"expand-icon\"\r\n                                          className={`fas fa-chevron-${\r\n                                            isExpanded ? \"up\" : \"down\"\r\n                                          } text-gray-400 text-sm`}\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n                \r\n                                    {isExpanded && (\r\n                                      <div\r\n                                        key=\"features-section\"\r\n                                        className=\"mt-6 pt-6 border-t border-gray-700/30\"\r\n                                      >\r\n                                        <h5\r\n                                          key=\"features-title\"\r\n                                          className=\"text-primary font-medium mb-4 flex items-center\"\r\n                                        >\r\n                                          <i\r\n                                            key=\"features-icon\"\r\n                                            className=\"fas fa-list-ul mr-2 text-sm\"\r\n                                          />\r\n                                          Key features:\r\n                                        </h5>\r\n                \r\n                                        <div\r\n                                          key=\"features-grid\"\r\n                                          className=\"grid md:grid-cols-2 gap-3\"\r\n                                        >\r\n                                          {phase.features.map((feature, featureIndex) => (\r\n                                            <div\r\n                                              key={`feature-${featureIndex}`}\r\n                                              className=\"flex items-center space-x-3 p-3 bg-custom-bg rounded-lg\"\r\n                                            >\r\n                                              <div\r\n                                                className={`w-2 h-2 rounded-full ${statusConfig.textClass.replace(\r\n                                                  \"text-\",\r\n                                                  \"bg-\"\r\n                                                )}`}\r\n                                              />\r\n                                              <span className=\"text-secondary text-sm\">\r\n                                                {feature}\r\n                                              </span>\r\n                                            </div>\r\n                                          ))}\r\n                                        </div>\r\n                                      </div>\r\n                                    )}\r\n                                  </button>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                \r\n                      <div key=\"cta-section\" className=\"mt-12 text-center\">\r\n                        <div\r\n                          key=\"cta-card\"\r\n                          className=\"card-minimal rounded-xl p-8 max-w-2xl mx-auto\"\r\n                        >\r\n                          <h4\r\n                            key=\"cta-title\"\r\n                            className=\"text-xl font-semibold text-primary mb-3\"\r\n                          >\r\n                            Join the future of privacy\r\n                          </h4>\r\n                          <p key=\"cta-description\" className=\"text-secondary mb-6\">\r\n                            SecureBit.chat grows thanks to the community. Your ideas and feedback help shape the future of secure communication with complete ASN.1 validation.\r\n                          </p>\r\n                \r\n                          <div\r\n                            key=\"cta-buttons\"\r\n                            className=\"flex flex-col sm:flex-row gap-4 justify-center\"\r\n                          >\r\n                            <a\r\n                              key=\"github-link\"\r\n                              href=\"https://github.com/SecureBitChat/securebit-chat/\"\r\n                              className=\"btn-primary text-white py-3 px-6 rounded-lg font-medium transition-all duration-200 flex items-center justify-center\"\r\n                            >\r\n                              <i key=\"github-icon\" className=\"fab fa-github mr-2\" />\r\n                              GitHub Repository\r\n                            </a>\r\n                \r\n                            <a\r\n                              key=\"feedback-link\"\r\n                              href=\"mailto:lockbitchat@tutanota.com\"\r\n                              className=\"btn-secondary text-white py-3 px-6 rounded-lg font-medium transition-all duration-200 flex items-center justify-center\"\r\n                            >\r\n                              <i key=\"feedback-icon\" className=\"fas fa-comments mr-2\" />\r\n                              Feedback\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }\r\n        \r\n        \r\n                // Enhanced Copy Button with better UX\r\n                const EnhancedCopyButton = ({ text, className = \"\", children }) => {\r\n                    const [copied, setCopied] = React.useState(false);\r\n        \r\n                    const handleCopy = async () => {\r\n                        try {\r\n                            await navigator.clipboard.writeText(text);\r\n                            setCopied(true);\r\n                            setTimeout(() => setCopied(false), 2000);\r\n                        } catch (error) {\r\n                            console.error('Copy failed:', error);\r\n                            // Fallback for older browsers\r\n                            const textArea = document.createElement('textarea');\r\n                            textArea.value = text;\r\n                            document.body.appendChild(textArea);\r\n                            textArea.select();\r\n                            document.execCommand('copy');\r\n                            document.body.removeChild(textArea);\r\n                            setCopied(true);\r\n                            setTimeout(() => setCopied(false), 2000);\r\n                        }\r\n                    };\r\n        \r\n                    return React.createElement('button', {\r\n                        onClick: handleCopy,\r\n                        className: `${className} transition-all duration-200`\r\n                    }, [\r\n                        React.createElement('i', {\r\n                            key: 'icon',\r\n                            className: `${copied ? 'fas fa-check accent-green' : 'fas fa-copy text-secondary'} mr-2`\r\n                        }),\r\n                        copied ? 'Copied!' : children\r\n                    ]);\r\n                };\r\n        \r\n                // Verification Component\r\n                const VerificationStep = ({ verificationCode, onConfirm, onReject, localConfirmed, remoteConfirmed, bothConfirmed }) => {\r\n                    return React.createElement('div', {\r\n                        className: \"card-minimal rounded-xl p-6 border-purple-500/20\"\r\n                    }, [\r\n                        React.createElement('div', {\r\n                            key: 'header',\r\n                            className: \"flex items-center mb-4\"\r\n                        }, [\r\n                            React.createElement('div', {\r\n                                key: 'icon',\r\n                                className: \"w-10 h-10 bg-purple-500/10 border border-purple-500/20 rounded-lg flex items-center justify-center mr-3\"\r\n                            }, [\r\n                                React.createElement('i', {\r\n                                    className: 'fas fa-shield-alt accent-purple'\r\n                                })\r\n                            ]),\r\n                            React.createElement('h3', {\r\n                                key: 'title',\r\n                                className: \"text-lg font-medium text-primary\"\r\n                            }, \"Security verification\")\r\n                        ]),\r\n                        React.createElement('div', {\r\n                            key: 'content',\r\n                            className: \"space-y-4\"\r\n                        }, [\r\n                            React.createElement('p', {\r\n                                key: 'description',\r\n                                className: \"text-secondary text-sm\"\r\n                            }, \"Verify the security code with your contact via another communication channel (voice, SMS, etc.):\"),\r\n                            React.createElement('div', {\r\n                                key: 'code-display',\r\n                                className: \"text-center\"\r\n                            }, [\r\n                                React.createElement('div', {\r\n                                    key: 'code',\r\n                                    className: \"verification-code text-2xl py-4\"\r\n                                }, verificationCode)\r\n                            ]),\r\n                            // Verification status indicators\r\n                            React.createElement('div', {\r\n                                key: 'verification-status',\r\n                                className: \"space-y-2\"\r\n                            }, [\r\n                                React.createElement('div', {\r\n                                    key: 'local-status',\r\n                                    className: `flex items-center justify-between p-2 rounded-lg ${localConfirmed ? 'bg-green-500/10 border border-green-500/20' : 'bg-gray-500/10 border border-gray-500/20'}`\r\n                                }, [\r\n                                    React.createElement('span', {\r\n                                        key: 'local-label',\r\n                                        className: \"text-sm text-secondary\"\r\n                                    }, \"Your confirmation:\"),\r\n                                    React.createElement('div', {\r\n                                        key: 'local-indicator',\r\n                                        className: \"flex items-center\"\r\n                                    }, [\r\n                                        React.createElement('i', {\r\n                                            key: 'local-icon',\r\n                                            className: `fas ${localConfirmed ? 'fa-check-circle text-green-400' : 'fa-clock text-gray-400'} mr-2`\r\n                                        }),\r\n                                        React.createElement('span', {\r\n                                            key: 'local-text',\r\n                                            className: `text-sm ${localConfirmed ? 'text-green-400' : 'text-gray-400'}`\r\n                                        }, localConfirmed ? 'Confirmed' : 'Pending')\r\n                                    ])\r\n                                ]),\r\n                                React.createElement('div', {\r\n                                    key: 'remote-status',\r\n                                    className: `flex items-center justify-between p-2 rounded-lg ${remoteConfirmed ? 'bg-green-500/10 border border-green-500/20' : 'bg-gray-500/10 border border-gray-500/20'}`\r\n                                }, [\r\n                                    React.createElement('span', {\r\n                                        key: 'remote-label',\r\n                                        className: \"text-sm text-secondary\"\r\n                                    }, \"Peer confirmation:\"),\r\n                                    React.createElement('div', {\r\n                                        key: 'remote-indicator',\r\n                                        className: \"flex items-center\"\r\n                                    }, [\r\n                                        React.createElement('i', {\r\n                                            key: 'remote-icon',\r\n                                            className: `fas ${remoteConfirmed ? 'fa-check-circle text-green-400' : 'fa-clock text-gray-400'} mr-2`\r\n                                        }),\r\n                                        React.createElement('span', {\r\n                                            key: 'remote-text',\r\n                                            className: `text-sm ${remoteConfirmed ? 'text-green-400' : 'text-gray-400'}`\r\n                                        }, remoteConfirmed ? 'Confirmed' : 'Pending')\r\n                                    ])\r\n                                ])\r\n                            ]),\r\n                            React.createElement('div', {\r\n                                key: 'warning',\r\n                                className: \"p-3 bg-yellow-500/10 border border-yellow-500/20 rounded-lg\"\r\n                            }, [\r\n                                React.createElement('p', {\r\n                                    className: \"text-yellow-400 text-sm flex items-center\"\r\n                                }, [\r\n                                    React.createElement('i', {\r\n                                        className: 'fas fa-exclamation-triangle mr-2'\r\n                                    }),\r\n                                    'Make sure the codes match exactly.!'\r\n                                ])\r\n                            ]),\r\n                            React.createElement('div', {\r\n                                key: 'buttons',\r\n                                className: \"flex space-x-3\"\r\n                            }, [\r\n                                React.createElement('button', {\r\n                                    key: 'confirm',\r\n                                    onClick: onConfirm,\r\n                                    disabled: localConfirmed,\r\n                                    className: `flex-1 py-3 px-4 rounded-lg font-medium transition-all duration-200 ${localConfirmed ? 'bg-gray-500/20 text-gray-400 cursor-not-allowed' : 'btn-verify text-white'}`\r\n                                }, [\r\n                                    React.createElement('i', {\r\n                                        className: `fas ${localConfirmed ? 'fa-check-circle' : 'fa-check'} mr-2`\r\n                                    }),\r\n                                    localConfirmed ? 'Confirmed' : 'The codes match'\r\n                                ]),\r\n                                React.createElement('button', {\r\n                                    key: 'reject',\r\n                                    onClick: onReject,\r\n                                    className: \"flex-1 bg-red-500/10 hover:bg-red-500/20 text-red-400 border border-red-500/20 py-3 px-4 rounded-lg font-medium transition-all duration-200\"\r\n                                }, [\r\n                                    React.createElement('i', {\r\n                                        className: 'fas fa-times mr-2'\r\n                                    }),\r\n                                    'The codes do not match'\r\n                                ])\r\n                            ])\r\n                        ])\r\n                    ]);\r\n                };\r\n        \r\n                // Enhanced Chat Message with better security indicators\r\n                const EnhancedChatMessage = ({ message, type, timestamp }) => {\r\n                    const formatTime = (ts) => {\r\n                        return new Date(ts).toLocaleTimeString('ru-RU', { \r\n                            hour: '2-digit', \r\n                            minute: '2-digit',\r\n                            second: '2-digit'\r\n                        });\r\n                    };\r\n        \r\n                    const getMessageStyle = () => {\r\n                        switch (type) {\r\n                            case 'sent':\r\n                                return {\r\n                                    container: \"ml-auto bg-orange-500/15 border-orange-500/20 text-primary\",\r\n                                    icon: \"fas fa-lock accent-orange\",\r\n                                    label: \"Encrypted\"\r\n                                };\r\n                            case 'received':\r\n                                return {\r\n                                    container: \"mr-auto card-minimal text-primary\",\r\n                                    icon: \"fas fa-unlock-alt accent-green\",\r\n                                    label: \"Decrypted\"\r\n                                };\r\n                            case 'system':\r\n                                return {\r\n                                    container: \"mx-auto bg-yellow-500/10 border border-yellow-500/20 text-yellow-400\",\r\n                                    icon: \"fas fa-info-circle accent-yellow\",\r\n                                    label: \"System\"\r\n                                };\r\n                            default:\r\n                                return {\r\n                                    container: \"mx-auto card-minimal text-secondary\",\r\n                                    icon: \"fas fa-circle text-muted\",\r\n                                    label: \"Unknown\"\r\n                                };\r\n                        }\r\n                    };\r\n        \r\n                    const style = getMessageStyle();\r\n        \r\n                    return React.createElement('div', {\r\n                        className: `message-slide mb-3 p-3 rounded-lg max-w-md break-words ${style.container} border`\r\n                    }, [\r\n                        React.createElement('div', {\r\n                            key: 'content',\r\n                            className: \"flex items-start space-x-2\"\r\n                        }, [\r\n                            React.createElement('i', {\r\n                                key: 'icon',\r\n                                className: `${style.icon} text-sm mt-0.5 opacity-70`\r\n                            }),\r\n                            React.createElement('div', {\r\n                                key: 'text',\r\n                                className: \"flex-1\"\r\n                            }, [\r\n                                React.createElement('div', {\r\n                                    key: 'message',\r\n                                    className: \"text-sm\"\r\n                                }, message),\r\n                                timestamp && React.createElement('div', {\r\n                                    key: 'meta',\r\n                                    className: \"flex items-center justify-between mt-1 text-xs opacity-50\"\r\n                                }, [\r\n                                    React.createElement('span', {\r\n                                        key: 'time'\r\n                                    }, formatTime(timestamp)),\r\n                                    React.createElement('span', {\r\n                                        key: 'status',\r\n                                        className: \"text-xs\"\r\n                                    }, style.label)\r\n                                ])\r\n                            ])\r\n                        ])\r\n                    ]);\r\n                };\r\n        \r\n                // Enhanced Connection Setup with verification\r\n                const EnhancedConnectionSetup = ({\r\n                    messages, \r\n                    onCreateOffer, \r\n                    onCreateAnswer, \r\n                    onConnect, \r\n                    onClearData,\r\n                    onVerifyConnection,\r\n                    connectionStatus,\r\n                    offerData,\r\n                    answerData,\r\n                    offerInput,\r\n                    setOfferInput,\r\n                    answerInput,\r\n                    setAnswerInput,\r\n                    showOfferStep,\r\n                    showAnswerStep,\r\n                    verificationCode,\r\n                    showVerification,\r\n                    offerPassword,\r\n                    answerPassword,\r\n                    localVerificationConfirmed,\r\n                    remoteVerificationConfirmed,\r\n                    bothVerificationsConfirmed\r\n                }) => {\r\n                    const [mode, setMode] = React.useState('select');\r\n        \r\n                    const resetToSelect = () => {\r\n                        setMode('select');\r\n                        onClearData();\r\n                    };\r\n        \r\n                    const handleVerificationConfirm = () => {\r\n                        onVerifyConnection(true);\r\n                    };\r\n        \r\n                    const handleVerificationReject = () => {\r\n                        onVerifyConnection(false);\r\n                    };\r\n        \r\n                    if (showVerification) {\r\n                        return React.createElement('div', {\r\n                            className: \"min-h-[calc(100vh-104px)] flex items-center justify-center p-4\"\r\n                        }, [\r\n                            React.createElement('div', {\r\n                                key: 'verification',\r\n                                className: \"w-full max-w-md\"\r\n                            }, [\r\n                                React.createElement(VerificationStep, {\r\n                                    verificationCode: verificationCode,\r\n                                    onConfirm: handleVerificationConfirm,\r\n                                    onReject: handleVerificationReject,\r\n                                    localConfirmed: localVerificationConfirmed,\r\n                                    remoteConfirmed: remoteVerificationConfirmed,\r\n                                    bothConfirmed: bothVerificationsConfirmed\r\n                                })\r\n                            ])\r\n                        ]);\r\n                    }\r\n        \r\n                    if (mode === 'select') {\r\n                        return React.createElement('div', {\r\n                            className: \"min-h-[calc(100vh-104px)] flex items-center justify-center p-4\"\r\n                        }, [\r\n                            React.createElement('div', {\r\n                                key: 'selector',\r\n                                className: \"w-full max-w-4xl\"\r\n                            }, [\r\n                                React.createElement('div', {\r\n                                    key: 'header',\r\n                                    className: \"text-center mb-8\"\r\n                                }, [\r\n                                    React.createElement('h2', {\r\n                                        key: 'title',\r\n                                        className: \"text-2xl font-semibold text-primary mb-3\"\r\n                                    }, 'Start secure communication'),\r\n                                    React.createElement('p', {\r\n                                        key: 'subtitle',\r\n                                        className: \"text-secondary max-w-2xl mx-auto\"\r\n                                    }, \"Choose a connection method for a secure channel with ECDH encryption and Perfect Forward Secrecy.\")\r\n                                ]),\r\n        \r\n                                React.createElement('div', {\r\n                                    key: 'options',\r\n                                    className: \"grid md:grid-cols-2 gap-6 max-w-3xl mx-auto\"\r\n                                }, [\r\n                                    // Create Connection\r\n                                    React.createElement('div', {\r\n                                        key: 'create',\r\n                                        onClick: () => setMode('create'),\r\n                                        className: \"card-minimal rounded-xl p-6 cursor-pointer group\"\r\n                                    }, [\r\n                                        React.createElement('div', {\r\n                                            key: 'icon',\r\n                                            className: \"w-12 h-12 bg-blue-500/10 border border-blue-500/20 rounded-lg flex items-center justify-center mx-auto mb-4\"\r\n                                        }, [\r\n                                            React.createElement('i', {\r\n                                                className: 'fas fa-plus text-xl text-blue-400'\r\n                                            })\r\n                                        ]),\r\n                                        React.createElement('h3', {\r\n                                            key: 'title',\r\n                                            className: \"text-lg font-semibold text-primary text-center mb-3\"\r\n                                        }, \"Create channel\"),\r\n                                        React.createElement('p', {\r\n                                            key: 'description',\r\n                                            className: \"text-secondary text-center text-sm mb-4\"\r\n                                        }, \"Initiate a new secure connection with encrypted exchange\"),\r\n                                        React.createElement('div', {\r\n                                            key: 'features',\r\n                                            className: \"space-y-2\"\r\n                                        }, [\r\n                                            React.createElement('div', {\r\n                                                key: 'f1',\r\n                                                className: \"flex items-center text-sm text-muted\"\r\n                                            }, [\r\n                                                React.createElement('i', {\r\n                                                    className: 'fas fa-key accent-orange mr-2 text-xs'\r\n                                                }),\r\n                                                'Generating ECDH keys'\r\n                                            ]),\r\n                                            React.createElement('div', {\r\n                                                key: 'f2',\r\n                                                className: \"flex items-center text-sm text-muted\"\r\n                                            }, [\r\n                                                React.createElement('i', {\r\n                                                    className: 'fas fa-shield-alt accent-orange mr-2 text-xs'\r\n                                                }),\r\n                                                'Verification code'\r\n                                            ]),\r\n                                            React.createElement('div', {\r\n                                                key: 'f3',\r\n                                                className: \"flex items-center text-sm text-muted\"\r\n                                            }, [\r\n                                                React.createElement('i', {\r\n                                                    className: 'fas fa-sync-alt accent-purple mr-2 text-xs'\r\n                                                }),\r\n                                                'PFS key rotation'\r\n                                            ])\r\n                                        ])\r\n                                    ]),\r\n        \r\n                                    // Join Connection\r\n                                    React.createElement('div', {\r\n                                        key: 'join',\r\n                                        onClick: () => setMode('join'),\r\n                                        className: \"card-minimal rounded-xl p-6 cursor-pointer group\"\r\n                                    }, [\r\n                                        React.createElement('div', {\r\n                                            key: 'icon',\r\n                                            className: \"w-12 h-12 bg-green-500/10 border border-green-500/20 rounded-lg flex items-center justify-center mx-auto mb-4\"\r\n                                        }, [\r\n                                            React.createElement('i', {\r\n                                                className: 'fas fa-link text-xl accent-green'\r\n                                            })\r\n                                        ]),\r\n                                        React.createElement('h3', {\r\n                                            key: 'title',\r\n                                            className: \"text-lg font-semibold text-primary text-center mb-3\"\r\n                                        }, \"Join\"),\r\n                                        React.createElement('p', {\r\n                                            key: 'description',\r\n                                            className: \"text-secondary text-center text-sm mb-4\"\r\n                                        }, \"Connect to an existing secure channel\"),\r\n                                        React.createElement('div', {\r\n                                            key: 'features',\r\n                                            className: \"space-y-2\"\r\n                                        }, [\r\n                                            React.createElement('div', {\r\n                                                key: 'f1',\r\n                                                className: \"flex items-center text-sm text-muted\"\r\n                                            }, [\r\n                                                React.createElement('i', {\r\n                                                    className: 'fas fa-paste accent-green mr-2 text-xs'\r\n                                                }),\r\n                                                'Paste Offer invitation'\r\n                                            ]),\r\n                                            React.createElement('div', {\r\n                                                key: 'f2',\r\n                                                className: \"flex items-center text-sm text-muted\"\r\n                                            }, [\r\n                                                React.createElement('i', {\r\n                                                    className: 'fas fa-check-circle accent-green mr-2 text-xs'\r\n                                                }),\r\n                                                'Automatic verification'\r\n                                            ]),\r\n                                            React.createElement('div', {\r\n                                                key: 'f3',\r\n                                                className: \"flex items-center text-sm text-muted\"\r\n                                            }, [\r\n                                                React.createElement('i', {\r\n                                                    className: 'fas fa-sync-alt accent-purple mr-2 text-xs'\r\n                                                }),\r\n                                                'PFS protection'\r\n                                            ])\r\n                                        ])\r\n                                    ])\r\n                                ]),\r\n        \r\n                                           \r\n                                React.createElement('div', {\r\n                                    key: 'security-features',\r\n                                    className: \"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-4 max-w-6xl mx-auto mt-8\"\r\n                                }, [\r\n                                    React.createElement('div', { key: 'feature1', className: \"text-center p-3 sm:p-4\" }, [\r\n                                        React.createElement('div', { key: 'icon', className: \"w-10 h-10 sm:w-12 sm:h-12 bg-green-500/10 border border-green-500/20 rounded-lg flex items-center justify-center mx-auto mb-2 sm:mb-3\" }, [\r\n                                            React.createElement('i', { className: 'fas fa-key accent-green' })\r\n                                        ]),\r\n                                        React.createElement('h4', { key: 'title', className: \"text-xs sm:text-sm font-medium text-primary mb-1\" }, \"ECDH P-384 Key Exchange\"),\r\n                                        React.createElement('p', { key: 'desc', className: \"text-xs text-muted leading-tight\" }, \"Military-grade elliptic curve key exchange\")\r\n                                    ]),\r\n                                    React.createElement('div', { key: 'feature2', className: \"text-center p-3 sm:p-4\" }, [\r\n                                        React.createElement('div', { key: 'icon', className: \"w-10 h-10 sm:w-12 sm:h-12 bg-purple-500/10 border border-purple-500/20 rounded-lg flex items-center justify-center mx-auto mb-2 sm:mb-3\" }, [\r\n                                            React.createElement('i', { className: 'fas fa-user-shield accent-purple' })\r\n                                        ]),\r\n                                        React.createElement('h4', { key: 'title', className: \"text-xs sm:text-sm font-medium text-primary mb-1\" }, \"MITM Protection\"),\r\n                                        React.createElement('p', { key: 'desc', className: \"text-xs text-muted leading-tight\" }, \"Out-of-band verification against attacks\")\r\n                                    ]),\r\n                                    React.createElement('div', { key: 'feature3', className: \"text-center p-3 sm:p-4\" }, [\r\n                                        React.createElement('div', { key: 'icon', className: \"w-10 h-10 sm:w-12 sm:h-12 bg-orange-500/10 border border-orange-500/20 rounded-lg flex items-center justify-center mx-auto mb-2 sm:mb-3\" }, [\r\n                                            React.createElement('i', { className: 'fas fa-lock accent-orange' })\r\n                                        ]),\r\n                                        React.createElement('h4', { key: 'title', className: \"text-xs sm:text-sm font-medium text-primary mb-1\" }, \"AES-GCM 256 Encryption\"),\r\n                                        React.createElement('p', { key: 'desc', className: \"text-xs text-muted leading-tight\" }, \"Authenticated encryption standard\")\r\n                                    ]),\r\n                                    React.createElement('div', { key: 'feature4', className: \"text-center p-3 sm:p-4\" }, [\r\n                                        React.createElement('div', { key: 'icon', className: \"w-10 h-10 sm:w-12 sm:h-12 bg-cyan-500/10 border border-cyan-500/20 rounded-lg flex items-center justify-center mx-auto mb-2 sm:mb-3\" }, [\r\n                                            React.createElement('i', { className: 'fas fa-sync-alt accent-cyan' })\r\n                                        ]),\r\n                                        React.createElement('h4', { key: 'title', className: \"text-xs sm:text-sm font-medium text-primary mb-1\" }, \"Perfect Forward Secrecy\"),\r\n                                        React.createElement('p', { key: 'desc', className: \"text-xs text-muted leading-tight\" }, \"Automatic key rotation every 5 minutes\")\r\n                                    ]),\r\n                                    React.createElement('div', { key: 'feature5', className: \"text-center p-3 sm:p-4\" }, [\r\n                                        React.createElement('div', { key: 'icon', className: \"w-10 h-10 sm:w-12 sm:h-12 bg-blue-500/10 border border-blue-500/20 rounded-lg flex items-center justify-center mx-auto mb-2 sm:mb-3\" }, [\r\n                                            React.createElement('i', { className: 'fas fa-signature accent-blue' })\r\n                                        ]),\r\n                                        React.createElement('h4', { key: 'title', className: \"text-xs sm:text-sm font-medium text-primary mb-1\" }, \"ECDSA P-384 Signatures\"),\r\n                                        React.createElement('p', { key: 'desc', className: \"text-xs text-muted leading-tight\" }, \"Digital signatures for message integrity\")\r\n                                    ]),\r\n                                    React.createElement('div', { key: 'feature6', className: \"text-center p-3 sm:p-4\" }, [\r\n                                        React.createElement('div', { key: 'icon', className: \"w-10 h-10 sm:w-12 sm:h-12 bg-yellow-500/10 border border-yellow-500/20 rounded-lg flex items-center justify-center mx-auto mb-2 sm:mb-3\" }, [\r\n                                            React.createElement('i', { className: 'fas fa-bolt accent-yellow' })\r\n                                        ]),\r\n                                        React.createElement('h4', { key: 'title', className: \"text-xs sm:text-sm font-medium text-primary mb-1\" }, \"Lightning Payments\"),\r\n                                        React.createElement('p', { key: 'desc', className: \"text-xs text-muted leading-tight\" }, \"Pay-per-session via WebLN\")\r\n                                    ])\r\n                                ]),\r\n        \r\n                                // Wallet Logos Section\r\n                                React.createElement('div', {\r\n                                    key: 'wallet-logos-section',\r\n                                    className: \"mt-8\"\r\n                                }, [\r\n                                    React.createElement('div', {\r\n                                        key: 'wallet-logos-header',\r\n                                        className: \"text-center mb-4\"\r\n                                    }, [\r\n                                        React.createElement('h3', {\r\n                                            key: 'title',\r\n                                            className: \"text-lg font-medium text-primary mb-2\"\r\n                                        }, \"Supported Lightning wallets\"),\r\n                                        React.createElement('p', {\r\n                                            key: 'subtitle',\r\n                                            className: \"text-secondary text-sm\"\r\n                                        }, \"To pay for sessions, use any of the popular wallets.\")\r\n                                    ]),\r\n                                    React.createElement('div', {\r\n                                        key: 'wallet-logos-container',\r\n                                        className: \"wallet-logos-container\"\r\n                                        }, [\r\n                                            React.createElement('div', {\r\n                                                key: 'wallet-logos-track',\r\n                                                className: \"wallet-logos-track\"\r\n                                            }, [\r\n                                                // First set of logos\r\n                                                React.createElement('a', { \r\n                                                    key: 'alby1-link', \r\n                                                    href: \"https://getalby.com\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo alby\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'alby-img1',\r\n                                                    src: \"logo/alby.svg\",\r\n                                                    alt: \"Alby Lightning Wallet\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'zeus1-link', \r\n                                                    href: \"https://zeusln.app\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo zeus\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'zeus-img1',\r\n                                                    src: \"logo/zeus.svg\",\r\n                                                    alt: \"Zeus Lightning Wallet\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'wos1-link', \r\n                                                    href: \"https://www.walletofsatoshi.com\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo wos\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'wos-img1',\r\n                                                    src: \"logo/wos.svg\",\r\n                                                    alt: \"Wallet of Satoshi\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'muun1-link', \r\n                                                    href: \"https://muun.com\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo muun\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'muun-img1',\r\n                                                    src: \"logo/muun.svg\",\r\n                                                    alt: \"Muun Wallet\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'atomic1-link', \r\n                                                    href: \"https://atomicwallet.io\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo atomic\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'atomic-img1',\r\n                                                    src: \"logo/atomic.svg\",\r\n                                                    alt: \"Atomic Wallet\",\r\n                                                        className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'breez1-link', \r\n                                                    href: \"https://breez.technology/mobile/\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo breez\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'breez-img1',\r\n                                                    src: \"logo/breez.svg\",\r\n                                                    alt: \"Breez Lightning Wallet\",\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'lightning-labs1-link', \r\n                                                    href: \"https://lightning.engineering\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo lightning-labs\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'lightning-labs-img1',\r\n                                                    src: \"logo/lightning-labs.svg\",\r\n                                                    alt: \"Lightning Labs\",\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'lnbits1-link', \r\n                                                    href: \"https://lnbits.com\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo lnbits\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'lnbits-img1',\r\n                                                    src: \"logo/lnbits.svg\",\r\n                                                    alt: \"LNbits\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'strike1-link', \r\n                                                    href: \"https://strike.me\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo strike\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'strike-img1',\r\n                                                    src: \"logo/strike.svg\",\r\n                                                    alt: \"Strike\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'impervious1-link', \r\n                                                    href: \"https://impervious.ai\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo impervious\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'impervious-img1',\r\n                                                    src: \"logo/impervious.svg\",\r\n                                                    alt: \"Impervious\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'bitcoin-lightning1-link', \r\n                                                    href: \"https://www.blink.sv/\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo bitcoin-lightning\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'blink-img1',\r\n                                                    src: \"logo/blink.svg\",\r\n                                                    alt: \"Blink Wallet\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                })\r\n                                            ]),\r\n                                            // Second set of logos\r\n                                            React.createElement('a', { \r\n                                                    key: 'alby2-link', \r\n                                                    href: \"https://getalby.com\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo alby\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'alby-img2',\r\n                                                    src: \"logo/alby.svg\",\r\n                                                    alt: \"Alby Lightning Wallet\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'zeus2-link', \r\n                                                    href: \"https://zeusln.app\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo zeus\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'zeus-img2',\r\n                                                    src: \"logo/zeus.svg\",\r\n                                                    alt: \"Zeus Lightning Wallet\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'wos2-link', \r\n                                                    href: \"https://www.walletofsatoshi.com\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo wos\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'wos-img2',\r\n                                                    src: \"logo/wos.svg\",\r\n                                                    alt: \"Wallet of Satoshi\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'muun2-link', \r\n                                                    href: \"https://muun.com\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo muun\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'muun-img2',\r\n                                                    src: \"logo/muun.svg\",\r\n                                                    alt: \"Muun Wallet\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'atomic2-link', \r\n                                                    href: \"https://atomicwallet.io\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo atomic\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'atomic-img2',\r\n                                                    src: \"logo/atomic.svg\",\r\n                                                    alt: \"Atomic Wallet\",\r\n                                                        className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'breez2-link', \r\n                                                    href: \"https://breez.technology/mobile/\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo breez\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'breez-img2',\r\n                                                    src: \"logo/breez.svg\",\r\n                                                    alt: \"Breez Lightning Wallet\",\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'lightning-labs2-link', \r\n                                                    href: \"https://lightning.engineering\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo lightning-labs\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'lightning-labs-img2',\r\n                                                    src: \"logo/lightning-labs.svg\",\r\n                                                    alt: \"Lightning Labs\",\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'lnbits2-link', \r\n                                                    href: \"https://lnbits.com\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo lnbits\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'lnbits-img2',\r\n                                                    src: \"logo/lnbits.svg\",\r\n                                                    alt: \"LNbits\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'strike2-link', \r\n                                                    href: \"https://strike.me\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo strike\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'strike-img2',\r\n                                                    src: \"logo/strike.svg\",\r\n                                                    alt: \"Strike\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'impervious2-link', \r\n                                                    href: \"https://impervious.ai\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo impervious\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'impervious-img2',\r\n                                                    src: \"logo/impervious.svg\",\r\n                                                    alt: \"Impervious\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                    })\r\n                                                ]),\r\n                                                React.createElement('a', { \r\n                                                    key: 'bitcoin-lightning2-link', \r\n                                                    href: \"https://www.blink.sv/\", \r\n                                                    target: \"_blank\", \r\n                                                    rel: \"noindex nofollow\",\r\n                                                    className: \"wallet-logo bitcoin-lightning\"\r\n                                                }, [\r\n                                                React.createElement('img', {\r\n                                                    key: 'blink-img2',\r\n                                                    src: \"logo/blink.svg\",\r\n                                                    alt: \"Blink Wallet\",\r\n                                                    className: \"wallet-logo-img\"\r\n                                                })\r\n                                            ])\r\n                                        ])\r\n                                    ])\r\n                                ]),\r\n                                React.createElement(UniqueFeatureSlider, { key: 'unique-features-slider' }),\r\n        \r\n                                React.createElement(DownloadApps, { key: 'download-apps' }),\r\n        \r\n                                React.createElement(ComparisonTable, { key: 'comparison-table' }),    \r\n                                \r\n                                React.createElement(Roadmap, { key: 'roadmap' }),\r\n                            ])\r\n                        ]);\r\n                    }\r\n        \r\n                    if (mode === 'create') {\r\n                        return React.createElement('div', {\r\n                            className: \"min-h-[calc(100vh-104px)] flex items-center justify-center p-4\"\r\n                        }, [\r\n                            React.createElement('div', {\r\n                                key: 'create-flow',\r\n                                className: \"w-full max-w-3xl space-y-6\"\r\n                            }, [\r\n                                React.createElement('div', {\r\n                                    key: 'header',\r\n                                    className: \"text-center\"\r\n                                }, [\r\n                                    React.createElement('button', {\r\n                                        key: 'back',\r\n                                        onClick: resetToSelect,\r\n                                        className: \"mb-4 text-secondary hover:text-primary transition-colors flex items-center mx-auto text-sm\"\r\n                                    }, [\r\n                                        React.createElement('i', {\r\n                                            className: 'fas fa-arrow-left mr-2'\r\n                                        }),\r\n                                        'Back to selection'\r\n                                    ]),\r\n                                    React.createElement('h2', {\r\n                                        key: 'title',\r\n                                        className: \"text-xl font-semibold text-primary mb-2\"\r\n                                    }, 'Creating a secure channel')\r\n                                ]),\r\n        \r\n                                // Step 1\r\n                                React.createElement('div', {\r\n                                    key: 'step1',\r\n                                    className: \"card-minimal rounded-xl p-6\"\r\n                                }, [\r\n                                    React.createElement('div', {\r\n                                        key: 'step-header',\r\n                                        className: \"flex items-center mb-4\"\r\n                                    }, [\r\n                                        React.createElement('div', {\r\n                                            key: 'number',\r\n                                            className: \"step-number mr-3\"\r\n                                        }, '1'),\r\n                                        React.createElement('h3', {\r\n                                            key: 'title',\r\n                                            className: \"text-lg font-medium text-primary\"\r\n                                        }, \"Generating ECDH keys and verification code\")\r\n                                    ]),\r\n                                    React.createElement('p', {\r\n                                        key: 'description',\r\n                                        className: \"text-secondary text-sm mb-4\"\r\n                                    }, \"Creating cryptographically strong keys and codes to protect against attacks\"),\r\n                                    React.createElement('button', {\r\n                                        key: 'create-btn',\r\n                                        onClick: onCreateOffer,\r\n                                        disabled: connectionStatus === 'connecting' || showOfferStep,\r\n                                        className: `w-full btn-primary text-white py-3 px-4 rounded-lg font-medium transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed`\r\n                                    }, [\r\n                                        React.createElement('i', {\r\n                                            className: 'fas fa-shield-alt mr-2'\r\n                                        }),\r\n                                        showOfferStep ? 'Keys created \u2713' : 'Create secure keys'\r\n                                    ]),\r\n        \r\n                                    showOfferStep && React.createElement('div', {\r\n                                        key: 'offer-result',\r\n                                        className: \"mt-6 space-y-4\"\r\n                                    }, [\r\n                                        React.createElement('div', {\r\n                                            key: 'success',\r\n                                            className: \"p-3 bg-green-500/10 border border-green-500/20 rounded-lg\"\r\n                                        }, [\r\n                                            React.createElement('p', {\r\n                                                className: \"text-green-400 text-sm font-medium flex items-center\"\r\n                                            }, [\r\n                                                React.createElement('i', {\r\n                                                    className: 'fas fa-check-circle mr-2'\r\n                                                }),\r\n                                                'Secure invitation created! Send the code to your contact:'\r\n                                            ])\r\n                                        ]),\r\n                                        React.createElement('div', {\r\n                                            key: 'offer-data',\r\n                                            className: \"space-y-3\"\r\n                                        }, [\r\n                                            React.createElement('textarea', {\r\n                                                key: 'textarea',\r\n                                                value: typeof offerData === 'object' ? JSON.stringify(offerData, null, 2) : offerData,\r\n                                                readOnly: true,\r\n                                                rows: 8,\r\n                                                className: \"w-full p-3 bg-custom-bg border border-gray-500/20 rounded-lg font-mono text-xs text-secondary resize-none custom-scrollbar\"\r\n                                            }),\r\n                                            React.createElement(EnhancedCopyButton, {\r\n                                                key: 'copy',\r\n                                                text: typeof offerData === 'object' ? JSON.stringify(offerData, null, 2) : offerData,\r\n                                                className: \"w-full px-3 py-2 bg-orange-500/10 hover:bg-orange-500/20 text-orange-400 border border-orange-500/20 rounded text-sm font-medium\"\r\n                                            }, 'Copy invitation code')\r\n                                        ])\r\n                                    ])\r\n                                ]),\r\n        \r\n                                // Step 2 - Session Type Selection\r\n                                // showOfferStep && React.createElement('div', {\r\n                                //     key: 'step2',\r\n                                //     className: \"card-minimal rounded-xl p-6\"\r\n                                // }, [\r\n                                //     React.createElement('div', {\r\n                                //         key: 'step-header',\r\n                                //         className: \"flex items-center mb-4\"\r\n                                //     }, [\r\n                                //         React.createElement('div', {\r\n                                //             key: 'number',\r\n                                //             className: \"w-8 h-8 bg-green-500 text-white rounded-lg flex items-center justify-center font-semibold text-sm mr-3\"\r\n                                //         }, '2'),\r\n                                //         React.createElement('h3', {\r\n                                //             key: 'title',\r\n                                //             className: \"text-lg font-medium text-primary\"\r\n                                //         }, \"Select session type\")\r\n                                //     ]),\r\n                                //     React.createElement('p', {\r\n                                //         key: 'description',\r\n                                //         className: \"text-secondary text-sm mb-4\"\r\n                                //     }, \"Choose a session plan or use limited demo mode for testing.\"),\r\n                                //     React.createElement(SessionTypeSelector, {\r\n                                //         key: 'session-selector',\r\n                                //         onSelectType: (sessionType) => {\r\n                                //             // Save the selected session type\r\n                                //             setSelectedSessionType(sessionType);\r\n                                //             console.log('\uD83C\uDFAF Session type selected:', sessionType);\r\n                                            \r\n                                //             // FIX: For demo sessions, we immediately call automatic activation\r\n                                //             if (sessionType === 'demo') {\r\n                                //                 console.log('\uD83C\uDFAE Demo session selected, scheduling automatic activation...');\r\n                                //                 // Delay activation for 2 seconds to stabilize\r\n                                //                 setTimeout(() => {\r\n                                //                     if (sessionManager) {\r\n                                //                         console.log('\uD83D\uDE80 Triggering demo session activation from selection...');\r\n                                //                         handleDemoVerification();\r\n                                //                     }\r\n                                //                 }, 2000);\r\n                                //             }\r\n                                            \r\n                                //             // Open a modal payment window\r\n                                //             if (typeof window.showPaymentModal === 'function') {\r\n                                //                 window.showPaymentModal(sessionType);\r\n                                //             } else {\r\n                                //                 // Fallback - show session information\r\n                                //                 console.log('Selected session type:', sessionType);\r\n                                //             }\r\n                                //         },\r\n                                //         onCancel: resetToSelect,\r\n                                //         sessionManager: window.sessionManager\r\n                                //     })\r\n                                // ]),\r\n        \r\n                                // Step 3 - Waiting for response\r\n                                showOfferStep && React.createElement('div', {\r\n                                    key: 'step2',\r\n                                    className: \"card-minimal rounded-xl p-6\"\r\n                                }, [\r\n                                    React.createElement('div', {\r\n                                        key: 'step-header',\r\n                                        className: \"flex items-center mb-4\"\r\n                                    }, [\r\n                                        React.createElement('div', {\r\n                                            key: 'number',\r\n                                            className: \"w-8 h-8 bg-blue-500 text-white rounded-lg flex items-center justify-center font-semibold text-sm mr-3\"\r\n                                        }, '2'),\r\n                                        React.createElement('h3', {\r\n                                            key: 'title',\r\n                                            className: \"text-lg font-medium text-primary\"\r\n                                        }, \"Waiting for the peer's response\")\r\n                                    ]),\r\n                                    React.createElement('p', {\r\n                                        key: 'description',\r\n                                        className: \"text-secondary text-sm mb-4\"\r\n                                    }, \"Paste the encrypted invitation code from your contact.\"),\r\n                                    React.createElement('textarea', {\r\n                                        key: 'input',\r\n                                        value: answerInput,\r\n                                        onChange: (e) => setAnswerInput(e.target.value),\r\n                                        rows: 6,\r\n                                        placeholder: \"Paste the encrypted response code from your contact...\",\r\n                                        className: \"w-full p-3 bg-custom-bg border border-gray-500/20 rounded-lg resize-none mb-4 text-secondary placeholder-gray-500 focus:border-orange-500/40 focus:outline-none transition-all custom-scrollbar text-sm\"\r\n                                    }),\r\n                                    React.createElement('button', {\r\n                                        key: 'connect-btn',\r\n                                        onClick: onConnect,\r\n                                        disabled: !answerInput.trim(),\r\n                                        className: \"w-full btn-secondary text-white py-3 px-4 rounded-lg font-medium transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                                    }, [\r\n                                        React.createElement('i', {\r\n                                            className: 'fas fa-rocket mr-2'\r\n                                        }),\r\n                                        'Establish connection'\r\n                                    ])\r\n                                ])\r\n                            ])\r\n                        ]);\r\n                    }\r\n        \r\n                    if (mode === 'join') {\r\n                        return React.createElement('div', {\r\n                            className: \"min-h-[calc(100vh-104px)] flex items-center justify-center p-4\"\r\n                        }, [\r\n                            React.createElement('div', {\r\n                                key: 'join-flow',\r\n                                className: \"w-full max-w-3xl space-y-6\"\r\n                            }, [\r\n                                React.createElement('div', {\r\n                                    key: 'header',\r\n                                    className: \"text-center\"\r\n                                }, [\r\n                                    React.createElement('button', {\r\n                                        key: 'back',\r\n                                        onClick: resetToSelect,\r\n                                        className: \"mb-4 text-secondary hover:text-primary transition-colors flex items-center mx-auto text-sm\"\r\n                                    }, [\r\n                                        React.createElement('i', {\r\n                                            className: 'fas fa-arrow-left mr-2'\r\n                                        }),\r\n                                        'Back to selection'\r\n                                    ]),\r\n                                    React.createElement('h2', {\r\n                                        key: 'title',\r\n                                        className: \"text-xl font-semibold text-primary mb-2\"\r\n                                    }, 'Joining the secure channel')\r\n                                ]),\r\n        \r\n                                // Step 1\r\n                                React.createElement('div', {\r\n                                    key: 'step1',\r\n                                    className: \"card-minimal rounded-xl p-6\"\r\n                                }, [\r\n                                    React.createElement('div', {\r\n                                        key: 'step-header',\r\n                                        className: \"flex items-center mb-4\"\r\n                                    }, [\r\n                                        React.createElement('div', {\r\n                                            key: 'number',\r\n                                            className: \"w-8 h-8 bg-green-500 text-white rounded-lg flex items-center justify-center font-semibold text-sm mr-3\"\r\n                                        }, '1'),\r\n                                        React.createElement('h3', {\r\n                                            key: 'title',\r\n                                            className: \"text-lg font-medium text-primary\"\r\n                                        }, \"Paste secure invitation\")\r\n                                    ]),\r\n                                    React.createElement('p', {\r\n                                        key: 'description',\r\n                                        className: \"text-secondary text-sm mb-4\"\r\n                                    }, \"Copy and paste the encrypted invitation code from the initiator.\"),\r\n                                    React.createElement('textarea', {\r\n                                        key: 'input',\r\n                                        value: offerInput,\r\n                                        onChange: (e) => setOfferInput(e.target.value),\r\n                                        rows: 8,\r\n                                        placeholder: \"Paste the encrypted invitation code...\",\r\n                                        className: \"w-full p-3 bg-custom-bg border border-gray-500/20 rounded-lg resize-none mb-4 text-secondary placeholder-gray-500 focus:border-green-500/40 focus:outline-none transition-all custom-scrollbar text-sm\"\r\n                                    }),\r\n                                    React.createElement('button', {\r\n                                        key: 'process-btn',\r\n                                        onClick: onCreateAnswer,\r\n                                        disabled: !offerInput.trim() || connectionStatus === 'connecting',\r\n                                        className: \"w-full btn-secondary text-white py-3 px-4 rounded-lg font-medium transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                                    }, [\r\n                                        React.createElement('i', {\r\n                                            className: 'fas fa-cogs mr-2'\r\n                                        }),\r\n                                        'Process the invitation'\r\n                                    ])\r\n                                ]),\r\n        \r\n                                // Step 2\r\n                                showAnswerStep && React.createElement('div', {\r\n                                    key: 'step2',\r\n                                    className: \"card-minimal rounded-xl p-6\"\r\n                                }, [\r\n                                    React.createElement('div', {\r\n                                        key: 'step-header',\r\n                                        className: \"flex items-center mb-4\"\r\n                                    }, [\r\n                                        React.createElement('div', {\r\n                                            key: 'number',\r\n                                            className: \"step-number mr-3\"\r\n                                        }, '2'),\r\n                                        React.createElement('h3', {\r\n                                            key: 'title',\r\n                                            className: \"text-lg font-medium text-primary\"\r\n                                        }, \"Sending a secure response\")\r\n                                    ]),\r\n                                    React.createElement('div', {\r\n                                        key: 'success',\r\n                                        className: \"p-3 bg-green-500/10 border border-green-500/20 rounded-lg mb-4\"\r\n                                    }, [\r\n                                        React.createElement('p', {\r\n                                            className: \"text-green-400 text-sm font-medium flex items-center\"\r\n                                        }, [\r\n                                            React.createElement('i', {\r\n                                                className: 'fas fa-check-circle mr-2'\r\n                                            }),\r\n                                            'Secure response created! Send this code to the initiator:'\r\n                                        ])\r\n                                    ]),\r\n                                    React.createElement('div', {\r\n                                        key: 'answer-data',\r\n                                        className: \"space-y-3 mb-4\"\r\n                                    }, [\r\n                                        React.createElement('textarea', {\r\n                                            key: 'textarea',\r\n                                            value: typeof answerData === 'object' ? JSON.stringify(answerData, null, 2) : answerData,\r\n                                            readOnly: true,\r\n                                            rows: 6,\r\n                                            className: \"w-full p-3 bg-custom-bg border border-green-500/20 rounded-lg font-mono text-xs text-secondary resize-none custom-scrollbar\"\r\n                                        }),\r\n                                        React.createElement(EnhancedCopyButton, {\r\n                                            key: 'copy',\r\n                                            text: typeof answerData === 'object' ? JSON.stringify(answerData, null, 2) : answerData,\r\n                                            className: \"w-full px-3 py-2 bg-green-500/10 hover:bg-green-500/20 text-green-400 border border-green-500/20 rounded text-sm font-medium\"\r\n                                        }, 'Copy response code')\r\n                                    ]),\r\n                                    React.createElement('div', {\r\n                                        key: 'info',\r\n                                        className: \"p-3 bg-purple-500/10 border border-purple-500/20 rounded-lg\"\r\n                                    }, [\r\n                                        React.createElement('p', {\r\n                                            className: \"text-purple-400 text-sm flex items-center justify-center\"\r\n                                        }, [\r\n                                            React.createElement('i', {\r\n                                                className: 'fas fa-shield-alt mr-2'\r\n                                            }),\r\n                                            'The connection will be established with verification'\r\n                                        ])\r\n                                    ])\r\n                                ])\r\n                            ])\r\n                        ]);\r\n                    }\r\n                };\r\n        \r\n               const EnhancedChatInterface = ({\r\n            messages,\r\n            messageInput,\r\n            setMessageInput,\r\n            onSendMessage,\r\n            onDisconnect,\r\n            keyFingerprint,\r\n            isVerified,\r\n            chatMessagesRef,\r\n            scrollToBottom,\r\n            webrtcManager\r\n        }) => {\r\n            const [showScrollButton, setShowScrollButton] = React.useState(false);\r\n            const [showFileTransfer, setShowFileTransfer] = React.useState(false);\r\n        \r\n            // \u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u043F\u0440\u043E\u043A\u0440\u0443\u0442\u043A\u0430 \u043F\u0440\u0438 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0438 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439\r\n            React.useEffect(() => {\r\n                if (chatMessagesRef.current && messages.length > 0) {\r\n                    const { scrollTop, scrollHeight, clientHeight } = chatMessagesRef.current;\r\n                    const isNearBottom = scrollHeight - scrollTop - clientHeight < 100;\r\n                    if (isNearBottom) {\r\n                        const smoothScroll = () => {\r\n                            if (chatMessagesRef.current) {\r\n                                chatMessagesRef.current.scrollTo({\r\n                                    top: chatMessagesRef.current.scrollHeight,\r\n                                    behavior: 'smooth'\r\n                                });\r\n                            }\r\n                        };\r\n                        smoothScroll();\r\n                        setTimeout(smoothScroll, 50);\r\n                        setTimeout(smoothScroll, 150);\r\n                    }\r\n                }\r\n            }, [messages, chatMessagesRef]);\r\n        \r\n            // \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A \u0441\u043A\u0440\u043E\u043B\u043B\u0430\r\n            const handleScroll = () => {\r\n                if (chatMessagesRef.current) {\r\n                    const { scrollTop, scrollHeight, clientHeight } = chatMessagesRef.current;\r\n                    const isNearBottom = scrollHeight - scrollTop - clientHeight < 100;\r\n                    setShowScrollButton(!isNearBottom);\r\n                }\r\n            };\r\n        \r\n            // \u041F\u0440\u043E\u043A\u0440\u0443\u0442\u043A\u0430 \u0432\u043D\u0438\u0437 \u043F\u043E \u043A\u043D\u043E\u043F\u043A\u0435\r\n            const handleScrollToBottom = () => {\r\n                scrollToBottom();\r\n                setShowScrollButton(false);\r\n            };\r\n        \r\n            // \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A \u043D\u0430\u0436\u0430\u0442\u0438\u044F Enter\r\n            const handleKeyPress = (e) => {\r\n                if (e.key === 'Enter' && !e.shiftKey) {\r\n                    e.preventDefault();\r\n                    onSendMessage();\r\n                }\r\n            };\r\n        \r\n            // \u0418\u0421\u041F\u0420\u0410\u0412\u041B\u0415\u041D\u0418\u0415: \u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0433\u043E\u0442\u043E\u0432\u043D\u043E\u0441\u0442\u0438 \u0434\u043B\u044F \u0444\u0430\u0439\u043B\u043E\u0432\u044B\u0445 \u0442\u0440\u0430\u043D\u0441\u0444\u0435\u0440\u043E\u0432\r\n            const isFileTransferReady = () => {\r\n                if (!webrtcManager) return false;\r\n                \r\n                const connected = webrtcManager.isConnected ? webrtcManager.isConnected() : false;\r\n                const verified = webrtcManager.isVerified || false;\r\n                const hasDataChannel = webrtcManager.dataChannel && webrtcManager.dataChannel.readyState === 'open';\r\n                \r\n                return connected && verified && hasDataChannel;\r\n            };\r\n        \r\n            // \u0412\u043E\u0437\u0432\u0440\u0430\u0442 JSX \u0447\u0435\u0440\u0435\u0437 React.createElement\r\n            return React.createElement(\r\n                'div',\r\n                {\r\n                    className: \"chat-container flex flex-col\",\r\n                    style: { backgroundColor: '#272827', height: 'calc(100vh - 64px)' }\r\n                },\r\n                [\r\n                    // \u041E\u0431\u043B\u0430\u0441\u0442\u044C \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439\r\n                    React.createElement(\r\n                        'div',\r\n                        { className: \"flex-1 flex flex-col overflow-hidden\" },\r\n                        React.createElement(\r\n                            'div',\r\n                            { className: \"flex-1 max-w-4xl mx-auto w-full p-4 overflow-hidden\" },\r\n                            React.createElement(\r\n                                'div',\r\n                                {\r\n                                    ref: chatMessagesRef,\r\n                                    onScroll: handleScroll,\r\n                                    className: \"h-full overflow-y-auto space-y-3 hide-scrollbar pr-2 scroll-smooth\"\r\n                                },\r\n                                messages.length === 0 ?\r\n                                    React.createElement(\r\n                                        'div',\r\n                                        { className: \"flex items-center justify-center h-full\" },\r\n                                        React.createElement(\r\n                                            'div',\r\n                                            { className: \"text-center max-w-md\" },\r\n                                            [\r\n                                                React.createElement(\r\n                                                    'div',\r\n                                                    { className: \"w-16 h-16 bg-green-500/10 border border-green-500/20 rounded-xl flex items-center justify-center mx-auto mb-4\" },\r\n                                                    React.createElement(\r\n                                                        'svg',\r\n                                                        { className: \"w-8 h-8 text-green-500\", fill: \"none\", stroke: \"currentColor\", viewBox: \"0 0 24 24\" },\r\n                                                        React.createElement('path', {\r\n                                                            strokeLinecap: \"round\",\r\n                                                            strokeLinejoin: \"round\",\r\n                                                            strokeWidth: 2,\r\n                                                            d: \"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\r\n                                                        })\r\n                                                    )\r\n                                                ),\r\n                                                React.createElement('h3', { className: \"text-lg font-medium text-gray-300 mb-2\" }, \"Secure channel is ready!\"),\r\n                                                React.createElement('p', { className: \"text-gray-400 text-sm mb-4\" }, \"All messages are protected by modern cryptographic algorithms\"),\r\n                                                React.createElement(\r\n                                                    'div',\r\n                                                    { className: \"text-left space-y-2\" },\r\n                                                    [\r\n                                                        ['End-to-end encryption', 'M5 13l4 4L19 7'],\r\n                                                        ['Protection against replay attacks', 'M5 13l4 4L19 7'],\r\n                                                        ['Integrity verification', 'M5 13l4 4L19 7'],\r\n                                                        ['Perfect Forward Secrecy', 'M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15']\r\n                                                    ].map(([text, d], i) =>\r\n                                                        React.createElement(\r\n                                                            'div',\r\n                                                            { key: `f${i}`, className: \"flex items-center text-sm text-gray-400\" },\r\n                                                            [\r\n                                                                React.createElement(\r\n                                                                    'svg',\r\n                                                                    {\r\n                                                                        className: `w-4 h-4 mr-3 ${i === 3 ? 'text-purple-500' : 'text-green-500'}`,\r\n                                                                        fill: \"none\",\r\n                                                                        stroke: \"currentColor\",\r\n                                                                        viewBox: \"0 0 24 24\"\r\n                                                                    },\r\n                                                                    React.createElement('path', {\r\n                                                                        strokeLinecap: \"round\",\r\n                                                                        strokeLinejoin: \"round\",\r\n                                                                        strokeWidth: 2,\r\n                                                                        d: d\r\n                                                                    })\r\n                                                                ),\r\n                                                                text\r\n                                                            ]\r\n                                                        )\r\n                                                    )\r\n                                                )\r\n                                            ]\r\n                                        )\r\n                                    ) :\r\n                                    messages.map((msg) =>\r\n                                        React.createElement(EnhancedChatMessage, {\r\n                                            key: msg.id,\r\n                                            message: msg.message,\r\n                                            type: msg.type,\r\n                                            timestamp: msg.timestamp\r\n                                        })\r\n                                    )\r\n                            )\r\n                        )\r\n                    ),\r\n        \r\n                    // \u041A\u043D\u043E\u043F\u043A\u0430 \u043F\u0440\u043E\u043A\u0440\u0443\u0442\u043A\u0438 \u0432\u043D\u0438\u0437\r\n                    showScrollButton &&\r\n                        React.createElement(\r\n                            'button',\r\n                            {\r\n                                onClick: handleScrollToBottom,\r\n                                className: \"fixed right-6 w-12 h-12 bg-green-500/20 hover:bg-green-500/30 border border-green-500/30 text-green-400 rounded-full flex items-center justify-center transition-all duration-200 shadow-lg z-50\",\r\n                                style: { bottom: '160px' }\r\n                            },\r\n                            React.createElement(\r\n                                'svg',\r\n                                { className: \"w-6 h-6\", fill: \"none\", stroke: \"currentColor\", viewBox: \"0 0 24 24\" },\r\n                                React.createElement('path', {\r\n                                    strokeLinecap: \"round\",\r\n                                    strokeLinejoin: \"round\",\r\n                                    strokeWidth: 2,\r\n                                    d: \"M19 14l-7 7m0 0l-7-7m7 7V3\"\r\n                                })\r\n                            )\r\n                        ),\r\n        \r\n                    // \u0421\u0435\u043A\u0446\u0438\u044F \u043F\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0444\u0430\u0439\u043B\u043E\u0432\r\n                    React.createElement(\r\n                        'div',\r\n                        {\r\n                            className: \"flex-shrink-0 border-t border-gray-500/10\",\r\n                            style: { backgroundColor: '#272827' }\r\n                        },\r\n                        React.createElement(\r\n                            'div',\r\n                            { className: \"max-w-4xl mx-auto px-4\" },\r\n                            [\r\n                                React.createElement(\r\n                                    'button',\r\n                                    {\r\n                                        onClick: () => setShowFileTransfer(!showFileTransfer),\r\n                                        className: `flex items-center text-sm text-gray-400 hover:text-gray-300 transition-colors py-4 ${showFileTransfer ? 'mb-4' : ''}`\r\n                                    },\r\n                                    [\r\n                                        React.createElement(\r\n                                            'svg',\r\n                                            {\r\n                                                className: `w-4 h-4 mr-2 transform transition-transform ${showFileTransfer ? 'rotate-180' : ''}`,\r\n                                                fill: \"none\",\r\n                                                stroke: \"currentColor\",\r\n                                                viewBox: \"0 0 24 24\"\r\n                                            },\r\n                                            showFileTransfer ?\r\n                                                React.createElement('path', {\r\n                                                    strokeLinecap: \"round\",\r\n                                                    strokeLinejoin: \"round\",\r\n                                                    strokeWidth: 2,\r\n                                                    d: \"M5 15l7-7 7 7\"\r\n                                                }) :\r\n                                                React.createElement('path', {\r\n                                                    strokeLinecap: \"round\",\r\n                                                    strokeLinejoin: \"round\",\r\n                                                    strokeWidth: 2,\r\n                                                    d: \"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13\"\r\n                                                })\r\n                                        ),\r\n                                        showFileTransfer ? 'Hide file transfer' : 'Send files'\r\n                                    ]\r\n                                ),\r\n                                // \u0418\u0421\u041F\u0420\u0410\u0412\u041B\u0415\u041D\u0418\u0415: \u0418\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u043C \u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u044B\u0439 \u043A\u043E\u043C\u043F\u043E\u043D\u0435\u043D\u0442\r\n                                showFileTransfer &&\r\n                                    React.createElement(window.FileTransferComponent || (() => \r\n                                        React.createElement('div', {\r\n                                            className: \"p-4 text-center text-red-400\"\r\n                                        }, 'FileTransferComponent not loaded')\r\n                                    ), {\r\n                                        webrtcManager: webrtcManager,\r\n                                        isConnected: isFileTransferReady()\r\n                                    })\r\n                            ]\r\n                        )\r\n                    ),\r\n        \r\n                    // \u041E\u0431\u043B\u0430\u0441\u0442\u044C \u0432\u0432\u043E\u0434\u0430 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439\r\n                    React.createElement(\r\n                        'div',\r\n                        { className: \"border-t border-gray-500/10\" },\r\n                        React.createElement(\r\n                            'div',\r\n                            { className: \"max-w-4xl mx-auto p-4\" },\r\n                            React.createElement(\r\n                                'div',\r\n                                { className: \"flex items-stretch space-x-3\" },\r\n                                [\r\n                                    React.createElement(\r\n                                        'div',\r\n                                        { className: \"flex-1 relative\" },\r\n                                        [\r\n                                            React.createElement('textarea', {\r\n                                                value: messageInput,\r\n                                                onChange: (e) => setMessageInput(e.target.value),\r\n                                                onKeyDown: handleKeyPress,\r\n                                                placeholder: \"Enter message to encrypt...\",\r\n                                                rows: 2,\r\n                                                maxLength: 2000,\r\n                                                style: { backgroundColor: '#272827' },\r\n                                                className: \"w-full p-3 border border-gray-600 rounded-lg resize-none text-gray-300 placeholder-gray-500 focus:border-green-500/40 focus:outline-none transition-all custom-scrollbar text-sm\"\r\n                                            }),\r\n                                            React.createElement(\r\n                                                'div',\r\n                                                { className: \"absolute bottom-2 right-3 flex items-center space-x-2 text-xs text-gray-400\" },\r\n                                                [\r\n                                                    React.createElement('span', null, `${messageInput.length}/2000`),\r\n                                                    React.createElement('span', null, \"\u2022 Enter to send\")\r\n                                                ]\r\n                                            )\r\n                                        ]\r\n                                    ),\r\n                                    React.createElement(\r\n                                        'button',\r\n                                        {\r\n                                            onClick: onSendMessage,\r\n                                            disabled: !messageInput.trim(),\r\n                                            className: \"bg-green-400/20 text-green-400 p-3 rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center min-h-[72px]\"\r\n                                        },\r\n                                        React.createElement(\r\n                                            'svg',\r\n                                            { className: \"w-6 h-6\", fill: \"none\", stroke: \"currentColor\", viewBox: \"0 0 24 24\" },\r\n                                            React.createElement('path', {\r\n                                                strokeLinecap: \"round\",\r\n                                                strokeLinejoin: \"round\",\r\n                                                strokeWidth: 2,\r\n                                                d: \"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"\r\n                                            })\r\n                                        )\r\n                                    )\r\n                                ]\r\n                            )\r\n                        )\r\n                    )\r\n                ]\r\n            );\r\n        };\r\n        \r\n        \r\n                // Main Enhanced Application Component\r\n                const EnhancedSecureP2PChat = () => {\r\n                    const [messages, setMessages] = React.useState([]);\r\n                    const [connectionStatus, setConnectionStatus] = React.useState('disconnected');\r\n                    \r\n                    React.useEffect(() => {\r\n                        if (messages.length > 0 && chatMessagesRef.current) {\r\n                            const scrollToBottom = () => {\r\n                                if (chatMessagesRef.current) {\r\n                                    chatMessagesRef.current.scrollTo({\r\n                                        top: chatMessagesRef.current.scrollHeight,\r\n                                        behavior: 'smooth'\r\n                                    });\r\n                                }\r\n                            };\r\n                            \r\n                            scrollToBottom();\r\n                            setTimeout(scrollToBottom, 50);\r\n                            setTimeout(scrollToBottom, 150);\r\n                        }\r\n                    }, [messages]);\r\n                    const [messageInput, setMessageInput] = React.useState('');\r\n                    const [offerData, setOfferData] = React.useState('');\r\n                    const [answerData, setAnswerData] = React.useState('');\r\n                    const [offerInput, setOfferInput] = React.useState('');\r\n                    const [answerInput, setAnswerInput] = React.useState('');\r\n                    const [keyFingerprint, setKeyFingerprint] = React.useState('');\r\n                    const [verificationCode, setVerificationCode] = React.useState('');\r\n                    const [showOfferStep, setShowOfferStep] = React.useState(false);\r\n                    const [showAnswerStep, setShowAnswerStep] = React.useState(false);\r\n                    const [showVerification, setShowVerification] = React.useState(false);\r\n                    const [isVerified, setIsVerified] = React.useState(false);\r\n                    const [securityLevel, setSecurityLevel] = React.useState(null);\r\n                    \r\n                    // Mutual verification states\r\n                    const [localVerificationConfirmed, setLocalVerificationConfirmed] = React.useState(false);\r\n                    const [remoteVerificationConfirmed, setRemoteVerificationConfirmed] = React.useState(false);\r\n                    const [bothVerificationsConfirmed, setBothVerificationsConfirmed] = React.useState(false);\r\n                    \r\n                    // PAKE password states removed - using SAS verification instead\r\n                    \r\n                    // Pay-per-session state\r\n                    const [sessionManager, setSessionManager] = React.useState(null);\r\n                    const [showPaymentModal, setShowPaymentModal] = React.useState(false);\r\n                    const [sessionTimeLeft, setSessionTimeLeft] = React.useState(0);\r\n                    const [pendingSession, setPendingSession] = React.useState(null); // { type, preimage }\r\n                    const [selectedSessionType, setSelectedSessionType] = React.useState(null); // 'demo', 'basic', 'premium'\r\n                    \r\n                    // Initialize sessionManager after loading modules\r\n                    React.useEffect(() => {\r\n                        if (window.PayPerSessionManager && !sessionManager) {\r\n                            console.log('\uD83D\uDCB0 Initializing PayPerSessionManager...');\r\n                            const newSessionManager = new window.PayPerSessionManager();\r\n                            setSessionManager(newSessionManager);\r\n                            window.sessionManager = newSessionManager;\r\n                            console.log('\u2705 PayPerSessionManager initialized successfully');\r\n                        }\r\n                    }, [sessionManager]);\r\n        \r\n        \r\n                    \r\n                    // Global functions for accessing modal windows\r\n                    React.useEffect(() => {\r\n                        if (!sessionManager) return; \r\n                        \r\n                        window.showPaymentModal = (sessionType) => {\r\n                            setShowPaymentModal(true);\r\n                            // Pass the selected session type to the modal window\r\n                            if (sessionType) {\r\n                                console.log('Opening payment modal for session type:', sessionType);\r\n                            }\r\n                        };\r\n                        window.sessionManager = sessionManager;\r\n                        window.forceCleanup = () => {\r\n                            handleClearData();\r\n                            if (webrtcManagerRef.current) {\r\n                                webrtcManagerRef.current.disconnect();\r\n                            }\r\n                            if (sessionManager) {\r\n                                sessionManager.cleanup();\r\n                            }\r\n                        };\r\n                        \r\n                        window.forceSessionReset = () => {\r\n                            if (sessionManager) {\r\n                                sessionManager.resetSession();\r\n                            }\r\n                            setSessionTimeLeft(0);\r\n                        };\r\n        \r\n                        window.forceSessionCleanup = () => {\r\n                            if (sessionManager) {\r\n                                sessionManager.cleanup();\r\n                            }\r\n                            setSessionTimeLeft(0);\r\n                            setSessionManager(null);\r\n                        };\r\n        \r\n                        window.clearLogs = () => {\r\n                            if (typeof console.clear === 'function') {\r\n                                console.clear();\r\n                            }\r\n                        };\r\n                        \r\n                        return () => {\r\n                            delete window.showPaymentModal;\r\n                            delete window.sessionManager;\r\n                            delete window.forceCleanup;\r\n                            delete window.forceSessionReset;\r\n                            delete window.forceSessionCleanup;\r\n                            delete window.clearLogs;\r\n                        };\r\n                    }, [sessionManager]);\r\n        \r\n                    const webrtcManagerRef = React.useRef(null);\r\n                    // Expose for modules/UI that run outside this closure (e.g., inline handlers)\r\n                    // Safe because it's a ref object and we maintain it centrally here\r\n                    window.webrtcManagerRef = webrtcManagerRef;\r\n        \r\n                    const addMessageWithAutoScroll = React.useCallback((message, type) => {\r\n                        const newMessage = {\r\n                            message,\r\n                            type,\r\n                            id: Date.now() + Math.random(),\r\n                            timestamp: Date.now()\r\n                        };\r\n                        \r\n                        setMessages(prev => {\r\n                            const updated = [...prev, newMessage];\r\n                            \r\n                            setTimeout(() => {\r\n                                if (chatMessagesRef?.current) {\r\n                                    const container = chatMessagesRef.current;\r\n                                    try {\r\n                                        const { scrollTop, scrollHeight, clientHeight } = container;\r\n                                        const isNearBottom = scrollHeight - scrollTop - clientHeight < 100;\r\n                                        \r\n                                        if (isNearBottom || prev.length === 0) {\r\n                                            requestAnimationFrame(() => {\r\n                                                if (container && container.scrollTo) {\r\n                                                    container.scrollTo({\r\n                                                        top: container.scrollHeight,\r\n                                                        behavior: 'smooth'\r\n                                                    });\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    } catch (error) {\r\n                                        console.warn('Scroll error:', error);\r\n                                        container.scrollTop = container.scrollHeight;\r\n                                    }\r\n                                }\r\n                            }, 50);\r\n                            \r\n                            return updated;\r\n                        });\r\n                    }, []);\r\n        \r\n                    // Update security level based on real verification\r\n                    const updateSecurityLevel = React.useCallback(async () => {\r\n                        if (window.isUpdatingSecurity) {\r\n                            return;\r\n                        }\r\n                        \r\n                        window.isUpdatingSecurity = true;\r\n                        \r\n                        try {\r\n                            if (webrtcManagerRef.current) {\r\n                                const level = await webrtcManagerRef.current.calculateSecurityLevel();\r\n                                setSecurityLevel(level);\r\n                                \r\n                                if (window.DEBUG_MODE) {\r\n                                    console.log('\uD83D\uDD12 Security level updated:', {\r\n                                        level: level.level,\r\n                                        score: level.score,\r\n                                        sessionType: level.sessionType,\r\n                                        passedChecks: level.passedChecks,\r\n                                        totalChecks: level.totalChecks\r\n                                    });\r\n                                }\r\n                            }\r\n                        } catch (error) {\r\n                            console.error('Failed to update security level:', error);\r\n                            setSecurityLevel({\r\n                                level: 'ERROR',\r\n                                score: 0,\r\n                                color: 'red',\r\n                                details: 'Verification failed'\r\n                            });\r\n                        } finally {\r\n                            setTimeout(() => {\r\n                                window.isUpdatingSecurity = false;\r\n                            }, 2000);\r\n                        }\r\n                    }, []);\r\n        \r\n                    // Session time ticker\r\n                    React.useEffect(() => {\r\n                        if (!sessionManager) return; \r\n                        \r\n                        const timer = setInterval(() => {\r\n                            if (sessionManager.hasActiveSession()) {\r\n                                setSessionTimeLeft(sessionManager.getTimeLeft());\r\n                            } else {\r\n                                setSessionTimeLeft(0);\r\n                            }\r\n                        }, 1000);\r\n                        return () => clearInterval(timer);\r\n                    }, [sessionManager]);\r\n        \r\n                    // Session expiration handler\r\n                    React.useEffect(() => {\r\n                        if (!sessionManager) return; \r\n                        \r\n                        sessionManager.onSessionExpired = () => {\r\n                            setMessages(prev => [...prev, {\r\n                                message: '\u23F0 Session time expired. The connection will be terminated.',\r\n                                type: 'system',\r\n                                id: Date.now(),\r\n                                timestamp: Date.now()\r\n                            }]);\r\n                            setTimeout(() => handleDisconnect(), 3000);\r\n                        };\r\n                    }, [sessionManager]);\r\n        \r\n                    // Automatic activation of demo session after successful verification\r\n                    React.useEffect(() => {\r\n                        if (!sessionManager) return;\r\n                        \r\n                        // Listen to demo session verification events\r\n                        const handleDemoVerification = async () => {\r\n                            try {\r\n                                // Check if there is an active demo session\r\n                                if (sessionManager.hasActiveSession()) {\r\n                                    console.log('\u2705 Demo session already active');\r\n                                    return;\r\n                                }\r\n                                \r\n                                // Diagnose sessionManager state\r\n                                console.log('\uD83D\uDD0D SessionManager state before activation:', {\r\n                                    hasActiveSession: sessionManager.hasActiveSession(),\r\n                                    timeLeft: sessionManager.getTimeLeft(),\r\n                                    currentSession: sessionManager.currentSession\r\n                                });\r\n                                \r\n                                window.pendingDemoActivation = true;\r\n                                \r\n                                setTimeout(async () => {\r\n                                    if (window.pendingDemoActivation && sessionManager) {\r\n                                        let result = null;\r\n                                        \r\n                                        const demoSession = sessionManager.createDemoSessionForActivation();\r\n                                        \r\n                                        if (!demoSession.success) {\r\n                                            return;\r\n                                        }\r\n        \r\n                                        result = await sessionManager.safeActivateSession(\r\n                                            'demo', \r\n                                            demoSession.preimage, \r\n                                            demoSession.paymentHash\r\n                                        );\r\n                                        \r\n                                        if (result && result.success) {\r\n                                            setSessionTimeLeft(sessionManager.getTimeLeft());\r\n                                            \r\n                                            setMessages(prev => [...prev, {\r\n                                                message: `\uD83C\uDFAE Demo session activated for ${Math.round(result.timeLeft / 60000)} minutes`,\r\n                                                type: 'system',\r\n                                                id: Date.now(),\r\n                                                timestamp: Date.now()\r\n                                            }]);\r\n        \r\n                                            window.pendingDemoActivation = false;\r\n                                        } else {\r\n                                            window.pendingDemoActivation = false;\r\n                                        }\r\n                                    }\r\n                                }, 3000); \r\n                            } catch (error) {\r\n                                console.error('\u274C Error activating demo session automatically:', error);\r\n                            }\r\n                        };\r\n                        \r\n                        if (connectionStatus === 'connected' && isVerified) {\r\n                            setTimeout(handleDemoVerification, 1000);\r\n                        }\r\n                        \r\n                        if (selectedSessionType === 'demo' && connectionStatus === 'connected' && isVerified) {\r\n                            setTimeout(handleDemoVerification, 1000);\r\n                        }\r\n                        \r\n                    }, [sessionManager, connectionStatus, isVerified, selectedSessionType]);\r\n                    const chatMessagesRef = React.useRef(null);\r\n        \r\n                    // Scroll down function\r\n                    const scrollToBottom = () => {\r\n                        if (chatMessagesRef.current) {\r\n                            const scrollAttempt = () => {\r\n                                if (chatMessagesRef.current) {\r\n                                    chatMessagesRef.current.scrollTo({\r\n                                        top: chatMessagesRef.current.scrollHeight,\r\n                                        behavior: 'smooth'\r\n                                    });\r\n                                }\r\n                            };\r\n                            scrollAttempt();\r\n        \r\n                            setTimeout(scrollAttempt, 50);\r\n                            setTimeout(scrollAttempt, 150);\r\n                            setTimeout(scrollAttempt, 300);\r\n        \r\n                            requestAnimationFrame(() => {\r\n                                setTimeout(scrollAttempt, 100);\r\n                            });\r\n                        }\r\n                    };\r\n                    \r\n                    // PAKE password functions removed - using SAS verification instead\r\n        \r\n                    React.useEffect(() => {\r\n                        // Prevent multiple initializations\r\n                        if (webrtcManagerRef.current) {\r\n                            console.log('\u26A0\uFE0F WebRTC Manager already initialized, skipping...');\r\n                            return;\r\n                        }\r\n        \r\n                        const handleMessage = (message, type) => {\r\n                            // \u0414\u043E\u043F\u043E\u043B\u043D\u0438\u0442\u0435\u043B\u044C\u043D\u0430\u044F \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u043D\u0430 \u0444\u0430\u0439\u043B\u043E\u0432\u044B\u0435 \u0438 \u0441\u0438\u0441\u0442\u0435\u043C\u043D\u044B\u0435 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u044F\r\n                            if (typeof message === 'string' && message.trim().startsWith('{')) {\r\n                                try {\r\n                                    const parsedMessage = JSON.parse(message);\r\n                                    const blockedTypes = [\r\n                                        'file_transfer_start',\r\n                                        'file_transfer_response',\r\n                                        'file_chunk',\r\n                                        'chunk_confirmation',\r\n                                        'file_transfer_complete',\r\n                                        'file_transfer_error',\r\n                                        'heartbeat',\r\n                                        'verification',\r\n                                        'verification_response',\r\n                                        'verification_confirmed',\r\n                                        'verification_both_confirmed',\r\n                                        'peer_disconnect',\r\n                                        'key_rotation_signal',\r\n                                        'key_rotation_ready',\r\n                                        'security_upgrade'\r\n                                    ];\r\n                                    if (parsedMessage.type && blockedTypes.includes(parsedMessage.type)) {\r\n                                        console.log(`\uD83D\uDED1 Blocked system/file message from chat: ${parsedMessage.type}`);\r\n                                        return; // \u041D\u0435 \u043F\u043E\u043A\u0430\u0437\u044B\u0432\u0430\u0435\u043C \u0441\u0438\u0441\u0442\u0435\u043C\u043D\u044B\u0435 \u0438 \u0444\u0430\u0439\u043B\u043E\u0432\u044B\u0435 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u044F \u0432 \u0447\u0430\u0442\u0435\r\n                                    }\r\n                                } catch (parseError) {\r\n                                    // \u041D\u0435 JSON - \u044D\u0442\u043E \u043D\u043E\u0440\u043C\u0430\u043B\u044C\u043D\u043E \u0434\u043B\u044F \u043E\u0431\u044B\u0447\u043D\u044B\u0445 \u0442\u0435\u043A\u0441\u0442\u043E\u0432\u044B\u0445 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439\r\n                                }\r\n                            }\r\n                            \r\n                            addMessageWithAutoScroll(message, type);\r\n                        };\r\n        \r\n                        const handleStatusChange = (status) => {\r\n                            console.log('handleStatusChange called with status:', status);\r\n                            setConnectionStatus(status);\r\n                            \r\n                            if (status === 'connected') {\r\n                                document.dispatchEvent(new CustomEvent('new-connection'));\r\n                                \r\n                                // \u041D\u0435 \u0441\u043A\u0440\u044B\u0432\u0430\u0435\u043C \u0432\u0435\u0440\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u044E \u043F\u0440\u0438 'connected' - \u0442\u043E\u043B\u044C\u043A\u043E \u043F\u0440\u0438 'verified'\r\n                                // setIsVerified(true);\r\n                                // setShowVerification(false);\r\n                                if (!window.isUpdatingSecurity) {\r\n                                    updateSecurityLevel().catch(console.error);\r\n                                }\r\n                            } else if (status === 'verifying') {\r\n                                console.log('Setting showVerification to true for verifying status');\r\n                                setShowVerification(true);\r\n                                if (!window.isUpdatingSecurity) {\r\n                                    updateSecurityLevel().catch(console.error);\r\n                                }\r\n                            } else if (status === 'verified') {\r\n                                setIsVerified(true);\r\n                                setShowVerification(false);\r\n                                setBothVerificationsConfirmed(true);\r\n                                // CRITICAL: Set connectionStatus to 'connected' to show chat\r\n                                setConnectionStatus('connected');\r\n                                if (!window.isUpdatingSecurity) {\r\n                                    updateSecurityLevel().catch(console.error);\r\n                                }\r\n                            } else if (status === 'connecting') {\r\n                                if (!window.isUpdatingSecurity) {\r\n                                    updateSecurityLevel().catch(console.error);\r\n                                }\r\n                            } else if (status === 'disconnected') {\r\n                                // \u041F\u0440\u0438 \u0440\u0430\u0437\u0440\u044B\u0432\u0435 \u0441\u043E\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u044F \u043E\u0447\u0438\u0449\u0430\u0435\u043C \u0432\u0441\u0435 \u0434\u0430\u043D\u043D\u044B\u0435\r\n                                setConnectionStatus('disconnected');\r\n                                setIsVerified(false);\r\n                                setShowVerification(false);\r\n                                \r\n                                // Dispatch disconnected event for SessionTimer\r\n                                document.dispatchEvent(new CustomEvent('disconnected'));\r\n                                \r\n                                // Clear verification states\r\n                                setLocalVerificationConfirmed(false);\r\n                                setRemoteVerificationConfirmed(false);\r\n                                setBothVerificationsConfirmed(false);\r\n                                \r\n                                // Clear connection data\r\n                                setOfferData(null);\r\n                                setAnswerData(null);\r\n                                setOfferInput('');\r\n                                setAnswerInput('');\r\n                                setShowOfferStep(false);\r\n                                setShowAnswerStep(false);\r\n                                setKeyFingerprint('');\r\n                                setVerificationCode('');\r\n                                setSecurityLevel(null);\r\n                                \r\n                                // Reset session and timer\r\n                                if (sessionManager && sessionManager.hasActiveSession()) {\r\n                                    sessionManager.resetSession();\r\n                                    setSessionTimeLeft(0);\r\n                                    setHasActiveSession(false);\r\n                                }\r\n                                \r\n                                // Return to main page after a short delay\r\n                                setTimeout(() => {\r\n                                    setConnectionStatus('disconnected');\r\n                                    setShowVerification(false);\r\n                                    setOfferData(null);\r\n                                    setAnswerData(null);\r\n                                    setOfferInput('');\r\n                                    setAnswerInput('');\r\n                                    setShowOfferStep(false);\r\n                                    setShowAnswerStep(false);\r\n                                    setMessages([]);\r\n                                }, 1000);\r\n                                \r\n                                // \u041D\u0435 \u043E\u0447\u0438\u0449\u0430\u0435\u043C \u043A\u043E\u043D\u0441\u043E\u043B\u044C \u043F\u0440\u0438 \u0440\u0430\u0437\u0440\u044B\u0432\u0435 \u0441\u043E\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u044F\r\n                                // \u0447\u0442\u043E\u0431\u044B \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C \u043C\u043E\u0433 \u0432\u0438\u0434\u0435\u0442\u044C \u043E\u0448\u0438\u0431\u043A\u0438\r\n                            } else if (status === 'peer_disconnected') {\r\n                                if (sessionManager && sessionManager.hasActiveSession()) {\r\n                                    sessionManager.resetSession();\r\n                                    setSessionTimeLeft(0);\r\n                                    setHasActiveSession(false);\r\n                                }\r\n        \r\n                                document.dispatchEvent(new CustomEvent('peer-disconnect'));\r\n                                \r\n                                // A short delay before clearing to display the status\r\n                                setTimeout(() => {\r\n                                    setKeyFingerprint('');\r\n                                    setVerificationCode('');\r\n                                    setSecurityLevel(null);\r\n                                    setIsVerified(false);\r\n                                    setShowVerification(false);\r\n                                    setConnectionStatus('disconnected');\r\n                                    \r\n                                    // Clear verification states\r\n                                    setLocalVerificationConfirmed(false);\r\n                                    setRemoteVerificationConfirmed(false);\r\n                                    setBothVerificationsConfirmed(false);\r\n                                    \r\n                                    // Clear connection data\r\n                                    setOfferData(null);\r\n                                    setAnswerData(null);\r\n                                    setOfferInput('');\r\n                                    setAnswerInput('');\r\n                                    setShowOfferStep(false);\r\n                                    setShowAnswerStep(false);\r\n                                    setMessages([]);\r\n        \r\n                                    // \u041D\u0435 \u043E\u0447\u0438\u0449\u0430\u0435\u043C \u043A\u043E\u043D\u0441\u043E\u043B\u044C \u043F\u0440\u0438 \u043E\u0442\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0438 \u043F\u0438\u0440\u0430\r\n                                    // \u0447\u0442\u043E\u0431\u044B \u0441\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C \u0438\u0441\u0442\u043E\u0440\u0438\u044E \u0441\u043E\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u044F\r\n                                    // if (typeof console.clear === 'function') {\r\n                                    //     console.clear();\r\n                                    // }\r\n        \r\n                                    setSessionManager(null);\r\n                                }, 2000);\r\n                            }\r\n                        };\r\n        \r\n                        const handleKeyExchange = (fingerprint) => {\r\n                            console.log('handleKeyExchange called with fingerprint:', fingerprint);\r\n                            if (fingerprint === '') {\r\n                                setKeyFingerprint('');\r\n                            } else {\r\n                                setKeyFingerprint(fingerprint);\r\n                                console.log('Key fingerprint set in UI:', fingerprint);\r\n                            }\r\n                        };\r\n                        \r\n                        const handleVerificationRequired = (code) => {\r\n                            console.log('handleVerificationRequired called with code:', code);\r\n                            if (code === '') {\r\n                                setVerificationCode('');\r\n                                setShowVerification(false);\r\n                            } else {\r\n                                setVerificationCode(code);\r\n                                setShowVerification(true);\r\n                                console.log('Verification code set, showing verification UI');\r\n                            }\r\n                        };\r\n        \r\n                        const handleVerificationStateChange = (state) => {\r\n                            console.log('handleVerificationStateChange called with state:', state);\r\n                            setLocalVerificationConfirmed(state.localConfirmed);\r\n                            setRemoteVerificationConfirmed(state.remoteConfirmed);\r\n                            setBothVerificationsConfirmed(state.bothConfirmed);\r\n                        };\r\n        \r\n                        // Callback for handling response errors\r\n                        const handleAnswerError = (errorType, errorMessage) => {\r\n                            if (errorType === 'replay_attack') {\r\n                                // Reset the session upon replay attack\r\n                                if (sessionManager.hasActiveSession()) {\r\n                                    sessionManager.resetSession();\r\n                                    setSessionTimeLeft(0);\r\n                                }\r\n                                setPendingSession(null);\r\n                                \r\n                                addMessageWithAutoScroll('\uD83D\uDCA1 Data is outdated. Please create a new invitation or use a current response code.', 'system');\r\n        \r\n                                if (typeof console.clear === 'function') {\r\n                                    console.clear();\r\n                                }\r\n                            } else if (errorType === 'security_violation') {\r\n                                // Reset the session upon security breach\r\n                                if (sessionManager.hasActiveSession()) {\r\n                                    sessionManager.resetSession();\r\n                                    setSessionTimeLeft(0);\r\n                                }\r\n                                setPendingSession(null);\r\n                                \r\n                                addMessageWithAutoScroll(`\uD83D\uDD12 Security breach: ${errorMessage}`, 'system');\r\n        \r\n                                if (typeof console.clear === 'function') {\r\n                                    console.clear();\r\n                                }\r\n                            }\r\n                        };\r\n        \r\n                        // Create WebRTC Manager only once\r\n                        console.log('\uD83D\uDD27 Initializing WebRTC Manager...');\r\n        \r\n                        if (typeof console.clear === 'function') {\r\n                            console.clear();\r\n                        }\r\n                        \r\n                        webrtcManagerRef.current = new EnhancedSecureWebRTCManager(\r\n                            handleMessage, \r\n                            handleStatusChange, \r\n                            handleKeyExchange,\r\n                            handleVerificationRequired,\r\n                            handleAnswerError,\r\n                            handleVerificationStateChange\r\n                        );\r\n        \r\n                        handleMessage('\uD83D\uDE80 SecureBit.chat Enhanced Security Edition v4.02.985 - ECDH + DTLS + SAS initialized. Ready to establish a secure connection with ECDH key exchange, DTLS fingerprint verification, and SAS authentication to prevent MITM attacks.', 'system');\r\n        \r\n                        const handleBeforeUnload = (event) => {\r\n                            if (event.type === 'beforeunload' && !isTabSwitching) {\r\n                                console.log('\uD83D\uDD0C Page unloading (closing tab) - sending disconnect notification');\r\n                                \r\n                                if (webrtcManagerRef.current && webrtcManagerRef.current.isConnected()) {\r\n                                    try {\r\n                                        webrtcManagerRef.current.sendSystemMessage({\r\n                                            type: 'peer_disconnect',\r\n                                            reason: 'user_disconnect',\r\n                                            timestamp: Date.now()\r\n                                        });\r\n                                    } catch (error) {\r\n                                        console.log('Could not send disconnect notification:', error.message);\r\n                                    }\r\n                                    \r\n                                    setTimeout(() => {\r\n                            if (webrtcManagerRef.current) {\r\n                                webrtcManagerRef.current.disconnect();\r\n                                        }\r\n                                    }, 100);\r\n                                } else if (webrtcManagerRef.current) {\r\n                                    webrtcManagerRef.current.disconnect();\r\n                                }\r\n                            } else if (isTabSwitching) {\r\n                                console.log('\uD83D\uDCF1 Tab switching detected - NOT disconnecting');\r\n                                event.preventDefault();\r\n                                event.returnValue = '';\r\n                            }\r\n                        };\r\n                        \r\n                        window.addEventListener('beforeunload', handleBeforeUnload);\r\n                        \r\n                        let isTabSwitching = false;\r\n                        let tabSwitchTimeout = null;\r\n                        \r\n                        const handleVisibilityChange = () => {\r\n                            if (document.visibilityState === 'hidden') {\r\n                                console.log('\uD83D\uDCF1 Page hidden (tab switch) - keeping connection alive');\r\n                                isTabSwitching = true;\r\n                                \r\n                                if (tabSwitchTimeout) {\r\n                                    clearTimeout(tabSwitchTimeout);\r\n                                }\r\n                                \r\n                                tabSwitchTimeout = setTimeout(() => {\r\n                                    isTabSwitching = false;\r\n                                }, 5000); \r\n                                \r\n                            } else if (document.visibilityState === 'visible') {\r\n                                console.log('\uD83D\uDCF1 Page visible (tab restored) - connection maintained');\r\n                                isTabSwitching = false;\r\n                                \r\n                                if (tabSwitchTimeout) {\r\n                                    clearTimeout(tabSwitchTimeout);\r\n                                    tabSwitchTimeout = null;\r\n                                }\r\n                            }\r\n                        };\r\n                        \r\n                        document.addEventListener('visibilitychange', handleVisibilityChange);\r\n        \r\n                    // Setup file transfer callbacks\r\n                    if (webrtcManagerRef.current) {\r\n                        webrtcManagerRef.current.setFileTransferCallbacks(\r\n                            // Progress callback\r\n                            (progress) => {\r\n                                console.log('File progress:', progress);\r\n                            },\r\n                            \r\n                            // File received callback\r\n                            (fileData) => {\r\n                                const sizeMb = Math.max(1, Math.round((fileData.fileSize || 0) / (1024 * 1024)));\r\n                                const downloadMessage = React.createElement('div', {\r\n                                    className: 'flex items-center space-x-2'\r\n                                }, [\r\n                                    React.createElement('span', { key: 'label' }, `\uD83D\uDCE5 File received: ${fileData.fileName} (${sizeMb} MB)`),\r\n                                    React.createElement('button', {\r\n                                        key: 'btn',\r\n                                        className: 'px-3 py-1 rounded bg-blue-600 hover:bg-blue-700 text-white text-xs',\r\n                                        onClick: async () => {\r\n                                            try {\r\n                                                const url = await fileData.getObjectURL();\r\n                                const a = document.createElement('a');\r\n                                a.href = url;\r\n                                a.download = fileData.fileName;\r\n                                a.click();\r\n                                                // \u0414\u0430\u0435\u043C \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0443 \u0432\u0440\u0435\u043C\u044F \u043D\u0430\u0447\u0430\u0442\u044C \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0443, \u0437\u0430\u0442\u0435\u043C \u043E\u0441\u0432\u043E\u0431\u043E\u0436\u0434\u0430\u0435\u043C URL\r\n                                                setTimeout(() => fileData.revokeObjectURL(url), 15000);\r\n                                            } catch (e) {\r\n                                                console.error('Download failed:', e);\r\n                                                addMessageWithAutoScroll(`\u274C File upload error: ${String(e?.message || e)}`, 'system');\r\n                                            }\r\n                                        }\r\n                                    }, 'Download')\r\n                                ]);\r\n                                \r\n                                addMessageWithAutoScroll(downloadMessage, 'system');\r\n                            },\r\n                            \r\n                            // Error callback\r\n                            (error) => {\r\n                                console.error('File transfer error:', error);\r\n                                \r\n                                if (error.includes('Connection not ready')) {\r\n                                    addMessageWithAutoScroll(`\u26A0\uFE0F File transfer error: connection not ready. Try again later.`, 'system');\r\n                                } else if (error.includes('File too large')) {\r\n                                    addMessageWithAutoScroll(`\u26A0\uFE0F File is too big. Maximum size: 100 MB`, 'system');\r\n                                } else {\r\n                                    addMessageWithAutoScroll(`\u274C File transfer error: ${error}`, 'system');\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n        \r\n                    return () => {\r\n                        window.removeEventListener('beforeunload', handleBeforeUnload);\r\n                        document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n                        \r\n                        if (tabSwitchTimeout) {\r\n                            clearTimeout(tabSwitchTimeout);\r\n                            tabSwitchTimeout = null;\r\n                        }\r\n                        \r\n                        if (webrtcManagerRef.current) {\r\n                            console.log('\uD83E\uDDF9 Cleaning up WebRTC Manager...');\r\n                            webrtcManagerRef.current.disconnect();\r\n                            webrtcManagerRef.current = null;\r\n                        }\r\n                    };\r\n                    }, []); // Empty dependency array to run only once\r\n        \r\n                    const ensureActiveSessionOrPurchase = async () => {\r\n                        if (sessionManager.hasActiveSession()) return true;\r\n                        if (pendingSession) return true; \r\n                        setShowPaymentModal(true);\r\n                        return false;\r\n                    };\r\n        \r\n                    const handleCreateOffer = async () => {\r\n                        try {\r\n                            console.log('\uD83C\uDFAF handleCreateOffer called');\r\n                            const ok = await ensureActiveSessionOrPurchase();\r\n                            if (!ok) return;\r\n        \r\n                            setOfferData('');\r\n                            setShowOfferStep(false);\r\n                            \r\n                            console.log('\uD83C\uDFAF Calling createSecureOffer...');\r\n                            const offer = await webrtcManagerRef.current.createSecureOffer();\r\n                            console.log('\uD83C\uDFAF createSecureOffer returned:', offer ? 'success' : 'null');\r\n                            \r\n                            // Store offer data directly (no encryption needed with SAS)\r\n                            setOfferData(offer);\r\n                            setShowOfferStep(true);\r\n        \r\n                            const existingMessages = messages.filter(m => \r\n                                m.type === 'system' && \r\n                                (m.message.includes('Secure invitation created') || m.message.includes('Send the encrypted code'))\r\n                            );\r\n                            \r\n                            if (existingMessages.length === 0) {\r\n                                setMessages(prev => [...prev, { \r\n                                    message: '\uD83D\uDD10 Secure invitation created and encrypted!', \r\n                                    type: 'system',\r\n                                    id: Date.now(),\r\n                                    timestamp: Date.now()\r\n                                }]);\r\n                                \r\n                                setMessages(prev => [...prev, { \r\n                                    message: '\uD83D\uDCE4 Send the invitation code to your interlocutor via a secure channel (voice call, SMS, etc.)..', \r\n                                    type: 'system',\r\n                                    id: Date.now(),\r\n                                    timestamp: Date.now()\r\n                                }]);\r\n        \r\n                            }\r\n        \r\n                            if (!window.isUpdatingSecurity) {\r\n                                updateSecurityLevel().catch(console.error);\r\n                            }\r\n                                                } catch (error) {\r\n                                    setMessages(prev => [...prev, { \r\n                                        message: `\u274C Error creating invitation: ${error.message}`, \r\n                                        type: 'system',\r\n                                        id: Date.now(),\r\n                                        timestamp: Date.now()\r\n                                    }]);\r\n                                }\r\n                    };\r\n        \r\n                    const handleCreateAnswer = async () => {\r\n                        try {\r\n                            if (!offerInput.trim()) {\r\n                                setMessages(prev => [...prev, { \r\n                                    message: '\u26A0\uFE0F You need to insert the invitation code from your interlocutor.', \r\n                                    type: 'system',\r\n                                    id: Date.now(),\r\n                                    timestamp: Date.now()\r\n                                }]);\r\n                                return;\r\n                            }\r\n        \r\n                            try {\r\n                                setMessages(prev => [...prev, { \r\n                                    message: '\uD83D\uDD04 Processing the secure invitation...', \r\n                                    type: 'system',\r\n                                    id: Date.now(),\r\n                                    timestamp: Date.now()\r\n                                }]);\r\n        \r\n                                setAnswerData('');\r\n                                setShowAnswerStep(false);\r\n        \r\n                                let offer;\r\n                                try {\r\n                                    // Parse the offer data directly (no decryption needed with SAS)\r\n                                    offer = JSON.parse(offerInput.trim());\r\n                                } catch (parseError) {\r\n                                    throw new Error(`Invalid invitation format: ${parseError.message}`);\r\n                                }\r\n        \r\n                                    if (!offer || typeof offer !== 'object') {\r\n                                        throw new Error('The invitation must be an object');\r\n                                    }\r\n        \r\n                                    if (!offer.type || offer.type !== 'enhanced_secure_offer') {\r\n                                        throw new Error('Invalid invitation type. Expected enhanced_secure_offer');\r\n                                    }\r\n        \r\n                                    console.log('Creating secure answer for offer:', offer);\r\n                                    const answer = await webrtcManagerRef.current.createSecureAnswer(offer);\r\n                                    console.log('Secure answer created:', answer);\r\n                                    \r\n                                    // Store answer data directly (no encryption needed with SAS)\r\n                                    setAnswerData(answer);\r\n                                    setShowAnswerStep(true);\r\n        \r\n                                const existingResponseMessages = messages.filter(m => \r\n                                    m.type === 'system' && \r\n                                    (m.message.includes('Secure response created') || m.message.includes('Send the response'))\r\n                                );\r\n                                \r\n                                if (existingResponseMessages.length === 0) {\r\n                                    setMessages(prev => [...prev, { \r\n                                        message: '\u2705 Secure response created!', \r\n                                        type: 'system',\r\n                                        id: Date.now(),\r\n                                        timestamp: Date.now()\r\n                                    }]);\r\n                                    \r\n                                    setMessages(prev => [...prev, { \r\n                                        message: '\uD83D\uDCE4 Send the response code to the initiator via a secure channel..', \r\n                                        type: 'system',\r\n                                        id: Date.now(),\r\n                                        timestamp: Date.now()\r\n                                    }]);\r\n        \r\n                                }\r\n                                    \r\n                                    // Update security level after creating answer\r\n                                    if (!window.isUpdatingSecurity) {\r\n                                        updateSecurityLevel().catch(console.error);\r\n                                    }\r\n                                } catch (error) {\r\n                                    console.error('Error in handleCreateAnswer:', error);\r\n                                    setMessages(prev => [...prev, { \r\n                                        message: `\u274C Error processing the invitation: ${error.message}`, \r\n                                        type: 'system',\r\n                                        id: Date.now(),\r\n                                        timestamp: Date.now()\r\n                                    }]);\r\n                                }\r\n                        } catch (error) {\r\n                            console.error('Error in handleCreateAnswer:', error);\r\n                            setMessages(prev => [...prev, { \r\n                                message: `\u274C Invitation processing error: ${error.message}`, \r\n                                type: 'system',\r\n                                id: Date.now(),\r\n                                timestamp: Date.now()\r\n                            }]);\r\n                        }\r\n                    };\r\n        \r\n                    const handleConnect = async () => {\r\n                        try {\r\n                            if (!answerInput.trim()) {\r\n                                setMessages(prev => [...prev, { \r\n                                    message: '\u26A0\uFE0F You need to insert the response code from your interlocutor.', \r\n                                    type: 'system',\r\n                                    id: Date.now(),\r\n                                    timestamp: Date.now()\r\n                                }]);\r\n                                return;\r\n                            }\r\n        \r\n                            try {\r\n                                setMessages(prev => [...prev, { \r\n                                    message: '\uD83D\uDD04 Processing the secure response...', \r\n                                    type: 'system',\r\n                                    id: Date.now(),\r\n                                    timestamp: Date.now()\r\n                                }]);\r\n        \r\n                                let answer;\r\n                                try {\r\n                                    // Parse the answer data directly (no decryption needed with SAS)\r\n                                    answer = JSON.parse(answerInput.trim());\r\n                                } catch (parseError) {\r\n                                    throw new Error(`Invalid response format: ${parseError.message}`);\r\n                                }\r\n        \r\n                                    if (!answer || typeof answer !== 'object') {\r\n                                        throw new Error('The response must be an object');\r\n                                    }\r\n        \r\n                                    if (!answer.type || answer.type !== 'enhanced_secure_answer') {\r\n                                        throw new Error('Invalid response type. Expected enhanced\\_secure\\_answer');\r\n                                    }\r\n        \r\n                                    await webrtcManagerRef.current.handleSecureAnswer(answer);\r\n                                    \r\n                                    if (sessionManager.canActivateSession() && pendingSession) {\r\n                                        const result = sessionManager.safeActivateSession(pendingSession.type, pendingSession.preimage, pendingSession.paymentHash);\r\n                                        if (result.success) {\r\n                                            setPendingSession(null);\r\n                                            setSessionTimeLeft(sessionManager.getTimeLeft()); \r\n                                            setMessages(prev => [...prev, { \r\n                                                message: `\uD83D\uDCB0 Session activated on ${sessionManager.sessionPrices[pendingSession.type].hours}\u0447 (${result.method})`, \r\n                                                type: 'system',\r\n                                                id: Date.now(),\r\n                                                timestamp: Date.now()\r\n                                            }]);\r\n                                        } else {\r\n                                            setMessages(prev => [...prev, { \r\n                                                message: `\u274C Session activation error: ${result.reason}`, \r\n                                                type: 'error',\r\n                                                id: Date.now(),\r\n                                                timestamp: Date.now()\r\n                                            }]);\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    setMessages(prev => [...prev, { \r\n                                        message: '\uD83D\uDD04 Finalizing the secure connection...', \r\n                                        type: 'system',\r\n                                        id: Date.now(),\r\n                                        timestamp: Date.now()\r\n                                    }]);\r\n                                    \r\n                                    // Update security level after handling answer\r\n                                    if (!window.isUpdatingSecurity) {\r\n                                        updateSecurityLevel().catch(console.error);\r\n                                    }\r\n                                } catch (error) {\r\n                                    setMessages(prev => [...prev, { \r\n                                        message: `\u274C Connection setup error: ${error.message}`, \r\n                                        type: 'system',\r\n                                        id: Date.now(),\r\n                                        timestamp: Date.now()\r\n                                    }]);\r\n                                    \r\n                                    if (!error.message.includes('Too old') && !error.message.includes('too old')) {\r\n                                        setPendingSession(null);\r\n                                    }\r\n                                } \r\n                        } catch (error) {\r\n                            setMessages(prev => [...prev, { \r\n                                message: `\u274C Connection setup error: ${error.message}`, \r\n                                type: 'system',\r\n                                id: Date.now(),\r\n                                timestamp: Date.now()\r\n                            }]);\r\n                            \r\n                            if (!error.message.includes('\u0441Too old') && !error.message.includes('too old')) {\r\n                                setPendingSession(null);\r\n                            }\r\n                        }\r\n                    };\r\n        \r\n                    const handleVerifyConnection = (isValid) => {\r\n                        if (isValid) {\r\n                            webrtcManagerRef.current.confirmVerification();\r\n                            // Mark local verification as confirmed\r\n                            setLocalVerificationConfirmed(true);\r\n                        } else {\r\n                            setMessages(prev => [...prev, { \r\n                                message: '\u274C Verification rejected. The connection is unsafe! Session reset..', \r\n                                type: 'system',\r\n                                id: Date.now(),\r\n                                timestamp: Date.now()\r\n                            }]);\r\n                            \r\n                            // Clear verification states\r\n                            setLocalVerificationConfirmed(false);\r\n                            setRemoteVerificationConfirmed(false);\r\n                            setBothVerificationsConfirmed(false);\r\n                            setShowVerification(false);\r\n                            setVerificationCode('');\r\n                            \r\n                            // Reset UI to initial state\r\n                            setConnectionStatus('disconnected');\r\n                            setOfferData(null);\r\n                            setAnswerData(null);\r\n                            setOfferInput('');\r\n                            setAnswerInput('');\r\n                            setShowOfferStep(false);\r\n                            setShowAnswerStep(false);\r\n                            setKeyFingerprint('');\r\n                            setSecurityLevel(null);\r\n                            setIsVerified(false);\r\n                            setMessages([]);\r\n                            \r\n                            sessionManager.resetSession();\r\n                            setSessionTimeLeft(0);\r\n                            setPendingSession(null);\r\n                            \r\n                            // Dispatch disconnected event for SessionTimer\r\n                            document.dispatchEvent(new CustomEvent('disconnected'));\r\n                            \r\n                            handleDisconnect();\r\n                        }\r\n                    };\r\n        \r\n                    const handleSendMessage = async () => {\r\n                        if (!messageInput.trim()) {\r\n                            return;\r\n                        }\r\n        \r\n                        if (!webrtcManagerRef.current) {\r\n                            return;\r\n                        }\r\n        \r\n                        if (!webrtcManagerRef.current.isConnected()) {\r\n                            return;\r\n                        }\r\n        \r\n                        try {\r\n                            \r\n                            // Add the message to local messages immediately (sent message)\r\n                            addMessageWithAutoScroll(messageInput.trim(), 'sent');\r\n                            \r\n                            // Use sendMessage for simple text messages instead of sendSecureMessage\r\n                            await webrtcManagerRef.current.sendMessage(messageInput);\r\n                            setMessageInput('');\r\n                        } catch (error) {\r\n                            const msg = String(error?.message || error);\r\n                            if (!/queued for sending|Data channel not ready/i.test(msg)) {\r\n                                addMessageWithAutoScroll(`\u274C Sending error: ${msg}`,'system');\r\n                            }\r\n                        }\r\n                    };\r\n        \r\n                    const handleClearData = () => {\r\n                        // \u041E\u0447\u0438\u0449\u0430\u0435\u043C \u0432\u0441\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u0441\u043E\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u044F\r\n                        setOfferData('');\r\n                        setAnswerData('');\r\n                        setOfferInput('');\r\n                        setAnswerInput('');\r\n                        setShowOfferStep(false);\r\n                        setShowAnswerStep(false);\r\n                        setShowVerification(false);\r\n                        setVerificationCode('');\r\n                        setIsVerified(false);\r\n                        setKeyFingerprint('');\r\n                        setSecurityLevel(null);\r\n                        setConnectionStatus('disconnected');\r\n                        setMessages([]);\r\n                        setMessageInput('');\r\n                        \r\n                        // Clear verification states\r\n                        setLocalVerificationConfirmed(false);\r\n                        setRemoteVerificationConfirmed(false);\r\n                        setBothVerificationsConfirmed(false);\r\n                        \r\n                        // PAKE passwords removed - using SAS verification instead \r\n                        \r\n                        // \u041D\u0435 \u043E\u0447\u0438\u0449\u0430\u0435\u043C \u043A\u043E\u043D\u0441\u043E\u043B\u044C \u043F\u0440\u0438 \u043E\u0447\u0438\u0441\u0442\u043A\u0435 \u0434\u0430\u043D\u043D\u044B\u0445\r\n                        // \u0447\u0442\u043E\u0431\u044B \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C \u043C\u043E\u0433 \u0432\u0438\u0434\u0435\u0442\u044C \u043E\u0448\u0438\u0431\u043A\u0438\r\n                        // if (typeof console.clear === 'function') {\r\n                        //     console.clear();\r\n                        // }\r\n                        \r\n                        // Cleanup pay-per-session state\r\n                        if (sessionManager) {\r\n                        sessionManager.cleanup();\r\n                        setSessionTimeLeft(0);\r\n                        }\r\n                        setShowPaymentModal(false);\r\n        \r\n                        setPendingSession(null);\r\n                        document.dispatchEvent(new CustomEvent('peer-disconnect'));\r\n                        setSessionManager(null);\r\n                    };\r\n        \r\n                    const handleDisconnect = () => {\r\n                        if (sessionManager && sessionManager.hasActiveSession()) {\r\n                            sessionManager.resetSession();\r\n                            setSessionTimeLeft(0);\r\n                        }\r\n                        \r\n                        // Cleanup pay-per-session state\r\n                        if (sessionManager) {\r\n                        sessionManager.cleanup();\r\n                        }\r\n                        setShowPaymentModal(false);\r\n        \r\n                        if (webrtcManagerRef.current) {\r\n                        webrtcManagerRef.current.disconnect();\r\n                        }\r\n        \r\n                        setKeyFingerprint('');\r\n                        setVerificationCode('');\r\n                        setSecurityLevel(null);\r\n                        setIsVerified(false);\r\n                        setShowVerification(false);\r\n                        setConnectionStatus('disconnected');\r\n                        \r\n                        // Clear verification states\r\n                        setLocalVerificationConfirmed(false);\r\n                        setRemoteVerificationConfirmed(false);\r\n                        setBothVerificationsConfirmed(false);\r\n        \r\n                        // Reset UI to initial state\r\n                        setConnectionStatus('disconnected');\r\n                        setShowVerification(false);\r\n                        setOfferData(null);\r\n                        setAnswerData(null);\r\n                        setOfferInput('');\r\n                        setAnswerInput('');\r\n                        setShowOfferStep(false);\r\n                        setShowAnswerStep(false);\r\n                        setKeyFingerprint('');\r\n                        setVerificationCode('');\r\n                        setSecurityLevel(null);\r\n                        setIsVerified(false);\r\n        \r\n                        setMessages([]);\r\n        \r\n                        // \u041D\u0435 \u043E\u0447\u0438\u0449\u0430\u0435\u043C \u043A\u043E\u043D\u0441\u043E\u043B\u044C \u043F\u0440\u0438 \u043E\u0442\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0438\r\n                        // \u0447\u0442\u043E\u0431\u044B \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C \u043C\u043E\u0433 \u0432\u0438\u0434\u0435\u0442\u044C \u043E\u0448\u0438\u0431\u043A\u0438\r\n                        // if (typeof console.clear === 'function') {\r\n                        //     console.clear();\r\n                        // }\r\n        \r\n                        document.dispatchEvent(new CustomEvent('peer-disconnect'));\r\n                        document.dispatchEvent(new CustomEvent('disconnected'));\r\n        \r\n                        document.dispatchEvent(new CustomEvent('session-cleanup', {\r\n                            detail: { \r\n                                timestamp: Date.now(),\r\n                                reason: 'manual_disconnect'\r\n                            }\r\n                        }));\r\n        \r\n                        setTimeout(() => {\r\n                            if (sessionManager && sessionManager.hasActiveSession()) {\r\n                                sessionManager.resetSession();\r\n                                setSessionTimeLeft(0);\r\n                            }\r\n                        }, 500);\r\n        \r\n                        handleClearData();\r\n        \r\n                        setTimeout(() => {\r\n                            setSessionManager(null);\r\n                        }, 1000);\r\n                    };\r\n        \r\n                    const handleSessionActivated = (session) => {\r\n                        let message;\r\n                        if (session.type === 'demo') {\r\n                            message = `\uD83C\uDFAE Demo session activated for 6 minutes. You can create invitations!`;\r\n                        } else {\r\n                            const hours = sessionManager.sessionPrices[session.type]?.hours || 0;\r\n                            message = `\uD83D\uDCB0 Session activated for ${hours}h. You can create invitations!`;\r\n                        }\r\n                        \r\n                        addMessageWithAutoScroll(message, 'system');\r\n        \r\n                    };\r\n        \r\n                    React.useEffect(() => {\r\n                        if (connectionStatus === 'connected' && isVerified) {\r\n                            addMessageWithAutoScroll('\uD83C\uDF89 Secure connection successfully established and verified! You can now communicate safely with full protection against MITM attacks and Perfect Forward Secrecy..', 'system');\r\n        \r\n                        }\r\n                    }, [connectionStatus, isVerified]);\r\n        \r\n                    const isConnectedAndVerified = connectionStatus === 'connected' && isVerified;\r\n        \r\n                    React.useEffect(() => {\r\n                        if (isConnectedAndVerified && sessionManager.canActivateSession() && pendingSession && connectionStatus !== 'failed') {\r\n                            const result = sessionManager.safeActivateSession(pendingSession.type, pendingSession.preimage, pendingSession.paymentHash);\r\n                            if (result.success) {\r\n                                setPendingSession(null);\r\n                                setSessionTimeLeft(sessionManager.getTimeLeft()); \r\n                                let message;\r\n                                if (pendingSession.type === 'demo') {\r\n                                    message = `\uD83C\uDFAE Demo session activated for 6 minutes (${result.method})`;\r\n                                } else {\r\n                                    const hours = sessionManager.sessionPrices[pendingSession.type]?.hours || 0;\r\n                                    message = `\uD83D\uDCB0 Session activated for ${hours}h (${result.method})`;\r\n                                }\r\n                                \r\n                                addMessageWithAutoScroll(message, 'system');\r\n                            } else {\r\n                                addMessageWithAutoScroll(`\u274C Session activation error: ${result.reason}`, 'error');\r\n                            }\r\n                        }\r\n                    }, [isConnectedAndVerified, sessionManager, pendingSession, connectionStatus]);\r\n        \r\n                    return React.createElement('div', { \r\n                        className: \"minimal-bg min-h-screen\" \r\n                    }, [\r\n                        React.createElement(EnhancedMinimalHeader, {\r\n                            key: 'header',\r\n                            status: connectionStatus,\r\n                            fingerprint: keyFingerprint,\r\n                            verificationCode: verificationCode,\r\n                            onDisconnect: handleDisconnect,\r\n                            isConnected: isConnectedAndVerified,\r\n                            securityLevel: securityLevel,\r\n                            sessionManager: sessionManager,\r\n                            sessionTimeLeft: sessionTimeLeft\r\n                        }),\r\n        \r\n                        React.createElement('main', {\r\n                            key: 'main'\r\n                        }, \r\n                            isConnectedAndVerified\r\n                                ? React.createElement(EnhancedChatInterface, {\r\n                                    messages: messages,\r\n                                    messageInput: messageInput,\r\n                                    setMessageInput: setMessageInput,\r\n                                    onSendMessage: handleSendMessage,\r\n                                    onDisconnect: handleDisconnect,\r\n                                    keyFingerprint: keyFingerprint,\r\n                                    isVerified: isVerified,\r\n                                    chatMessagesRef: chatMessagesRef,\r\n                                    webrtcManager: webrtcManagerRef.current\r\n                                })\r\n                                : React.createElement(EnhancedConnectionSetup, {\r\n                                    onCreateOffer: handleCreateOffer,\r\n                                    onCreateAnswer: handleCreateAnswer,\r\n                                    onConnect: handleConnect,\r\n                                    onClearData: handleClearData,\r\n                                    onVerifyConnection: handleVerifyConnection,\r\n                                    connectionStatus: connectionStatus,\r\n                                    offerData: offerData,\r\n                                    answerData: answerData,\r\n                                    offerInput: offerInput,\r\n                                    setOfferInput: setOfferInput,\r\n                                    answerInput: answerInput,\r\n                                    setAnswerInput: setAnswerInput,\r\n                                    showOfferStep: showOfferStep,\r\n                                    showAnswerStep: showAnswerStep,\r\n                                    verificationCode: verificationCode,\r\n                                    showVerification: showVerification,\r\n                                    messages: messages,\r\n                                    localVerificationConfirmed: localVerificationConfirmed,\r\n                                    remoteVerificationConfirmed: remoteVerificationConfirmed,\r\n                                    bothVerificationsConfirmed: bothVerificationsConfirmed,\r\n                                    // PAKE passwords removed - using SAS verification instead\r\n                                })\r\n                        ),\r\n                        \r\n                        // PAKE Password Modal removed - using SAS verification instead\r\n        \r\n                        // Payment Modal\r\n                        React.createElement(PaymentModal, {\r\n                            key: 'payment-modal',\r\n                            isOpen: showPaymentModal,\r\n                            onClose: () => setShowPaymentModal(false),\r\n                            sessionManager: sessionManager,\r\n                            onSessionPurchased: (session) => { setPendingSession(session); handleSessionActivated({ type: session.type }); }\r\n                        })\r\n                    ]);\r\n                };\r\n                function initializeApp() {\r\n                    if (window.EnhancedSecureCryptoUtils && window.EnhancedSecureWebRTCManager) {\r\n                        ReactDOM.render(React.createElement(EnhancedSecureP2PChat), document.getElementById('root'));\r\n                    } else {\r\n                        console.error('\u274C \u041C\u043E\u0434\u0443\u043B\u0438 \u043D\u0435 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043D\u044B:', {\r\n                            hasCrypto: !!window.EnhancedSecureCryptoUtils,\r\n                            hasWebRTC: !!window.EnhancedSecureWebRTCManager\r\n                        });\r\n                    }\r\n                }\r\n                if (typeof window !== 'undefined' && !window.initializeApp) {\r\n                    window.initializeApp = initializeApp;\r\n                }\r\n                // Render Enhanced Application\r\n                ReactDOM.render(React.createElement(EnhancedSecureP2PChat), document.getElementById('root'));"],
  "mappings": "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",
  "names": ["scrollToBottom"]
}
