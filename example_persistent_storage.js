// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–ª—é—á–µ–π
import { 
    EnhancedSecureWebRTCManager,
    SecureMasterKeyManager,
    SecureIndexedDBWrapper,
    SecurePersistentKeyStorage
} from './src/network/EnhancedSecureWebRTCManager.js';

// –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ WebRTC —Å –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–º —Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
const webrtcManager = new EnhancedSecureWebRTCManager(
    (message) => console.log('Received:', message),
    (status) => console.log('Status:', status),
    (keyData) => console.log('Key exchange:', keyData),
    (verificationData) => console.log('Verification required:', verificationData)
);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ callback –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
webrtcManager.setMasterKeyPasswordCallback((isRetry, callback) => {
    const message = isRetry ? 
        '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –í–≤–µ–¥–∏—Ç–µ –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å –ø–æ–≤—Ç–æ—Ä–Ω–æ:' : 
        '–í–≤–µ–¥–∏—Ç–µ –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∫–ª—é—á–µ–π:';
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π UI
    const password = prompt(message);
    callback(password);
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ callback –¥–ª—è –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
webrtcManager.setMasterKeySessionExpiredCallback((reason) => {
    console.warn(`–°–µ—Å—Å–∏—è –º–∞—Å—Ç–µ—Ä-–∫–ª—é—á–∞ –∏—Å—Ç–µ–∫–ª–∞: ${reason}`);
    alert(`–°–µ—Å—Å–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞: ${reason}. –ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è.`);
});

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–º —Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
async function demonstratePersistentStorage() {
    try {
        console.log('=== –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–ª—é—á–µ–π ===');
        
        // 1. –°–æ–∑–¥–∞–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ extractable –∫–ª—é—á–∞
        console.log('\n1. –°–æ–∑–¥–∞–Ω–∏–µ extractable –∫–ª—é—á–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏...');
        const testKey = await crypto.subtle.generateKey(
            {
                name: 'AES-GCM',
                length: 256
            },
            true, // extractable = true –¥–ª—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è
            ['encrypt', 'decrypt']
        );
        
        // 2. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–ª—é—á–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—à–∏—Ñ—Ä—É–µ—Ç—Å—è –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ IndexedDB)
        console.log('2. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–ª—é—á–∞ –≤ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ...');
        const keyId = 'demo_persistent_key_' + Date.now();
        const stored = await webrtcManager._secureKeyStorage.storeKey(keyId, testKey, {
            purpose: 'demonstration',
            algorithm: 'AES-GCM'
        });
        
        if (stored) {
            console.log('‚úÖ –ö–ª—é—á —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ –≤ IndexedDB');
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–ª—é—á–∞');
            return;
        }
        
        // 3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
        console.log('\n3. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞:');
        const stats = await webrtcManager._secureKeyStorage.getStorageStats();
        console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', JSON.stringify(stats, null, 2));
        
        // 4. –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª—é—á–µ–π
        console.log('\n4. –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª—é—á–µ–π:');
        const allKeys = await webrtcManager._secureKeyStorage.listAllKeys();
        console.log('–ö–ª—é—á–∏:', JSON.stringify(allKeys, null, 2));
        
        // 5. –°–∏–º—É–ª—è—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–æ—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏)
        console.log('\n5. –°–∏–º—É–ª—è—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
        webrtcManager._secureKeyStorage._keyReferences.clear();
        console.log('–ü–∞–º—è—Ç—å –æ—á–∏—â–µ–Ω–∞. –ö–ª—é—á–∏ –æ—Å—Ç–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ –≤ IndexedDB.');
        
        // 6. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ –∏–∑ IndexedDB
        console.log('\n6. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ –∏–∑ IndexedDB...');
        const restoredKey = await webrtcManager._secureKeyStorage.retrieveKey(keyId);
        
        if (restoredKey) {
            console.log('‚úÖ –ö–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ IndexedDB –∫–∞–∫ non-extractable');
            console.log('–¢–∏–ø –∫–ª—é—á–∞:', restoredKey.type);
            console.log('–ê–ª–≥–æ—Ä–∏—Ç–º:', restoredKey.algorithm.name);
            console.log('Extractable:', restoredKey.extractable); // –î–æ–ª–∂–Ω–æ –±—ã—Ç—å false
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞');
        }
        
        // 7. –¢–µ—Å—Ç —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –∫–ª—é—á–æ–º
        console.log('\n7. –¢–µ—Å—Ç —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –∫–ª—é—á–æ–º...');
        const testData = new TextEncoder().encode('–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è');
        const iv = crypto.getRandomValues(new Uint8Array(12));
        
        const encrypted = await crypto.subtle.encrypt(
            { name: 'AES-GCM', iv },
            restoredKey,
            testData
        );
        
        const decrypted = await crypto.subtle.decrypt(
            { name: 'AES-GCM', iv },
            restoredKey,
            encrypted
        );
        
        const decryptedText = new TextDecoder().decode(decrypted);
        console.log('‚úÖ –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ/—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ:', decryptedText);
        
        // 8. –û—á–∏—Å—Ç–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        console.log('\n8. –û—á–∏—Å—Ç–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
        await webrtcManager._secureKeyStorage.deleteKey(keyId);
        console.log('‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–ª—é—á —É–¥–∞–ª–µ–Ω');
        
        console.log('\n=== –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ===');
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:', error);
    }
}

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
async function demonstrateSecurity() {
    console.log('\n=== –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ ===');
    
    try {
        // –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ IndexedDB
        const request = indexedDB.open('SecureKeyStorage');
        request.onsuccess = (event) => {
            const db = event.target.result;
            const transaction = db.transaction(['encrypted_keys'], 'readonly');
            const store = transaction.objectStore('encrypted_keys');
            const getAllRequest = store.getAll();
            
            getAllRequest.onsuccess = () => {
                const keys = getAllRequest.result;
                console.log('üîç –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ IndexedDB:');
                
                if (keys.length > 0) {
                    const firstKey = keys[0];
                    console.log('üì¶ –ù–∞–π–¥–µ–Ω –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á:');
                    console.log('- ID:', firstKey.keyId);
                    console.log('- –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–µ 20 –±–∞–π—Ç):', 
                        Array.from(firstKey.encryptedData.slice(0, 20))
                             .map(b => b.toString(16).padStart(2, '0')).join(' '));
                    console.log('- IV:', Array.from(firstKey.iv)
                                      .map(b => b.toString(16).padStart(2, '0')).join(' '));
                    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã - –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏–∑–≤–ª–µ—á—å JWK –±–µ–∑ –º–∞—Å—Ç–µ—Ä-–∫–ª—é—á–∞!');
                } else {
                    console.log('üì≠ –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∫–ª—é—á–µ–π –≤ IndexedDB');
                }
            };
        };
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:', error);
    }
}

// –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
console.log('–ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–ª—é—á–µ–π...');
console.log('–ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å.');

// –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–π
demonstratePersistentStorage()
    .then(() => demonstrateSecurity())
    .catch(error => console.error('–û—à–∏–±–∫–∞:', error));
